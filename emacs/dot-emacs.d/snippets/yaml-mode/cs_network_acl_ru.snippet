# -*- mode: snippet -*-
# name: Manages network access control list (ACL) rules on Apache CloudStack based clouds.
# prefix: cs_network_acl_rule_snippet
# key: cs_network_acl_ru
# group: ansible
# --

- name: ${0:Manages network access control list (ACL) rules on Apache CloudStack based clouds.}
  cs_network_acl_rule:                                                     
    network_acl: ${1:Name of the network ACL}                              #
    rule_position: ${2:The position of the network ACL rule}               #
    vpc: ${3:VPC the network ACL is related to}                            #
    cidrs: ${{4:['0}                                                       #0 0 0/0']} # not required  CIDRs of the rule 
    protocol: ${5$$(yas-choose-value '("tcp" "udp" "icmp" "all" "by_number"))}# choices: tcp;udp;icmp;all;by_number  Protocol of the rule
    protocol_number: ${6:value}                                            # Protocol number from 1 to 256 required if I(protocol=by_number) 
    start_port: ${7:value}                                                 # Start port for this rule  Considered if I(protocol=tcp) or I(protocol=udp) 
    end_port: ${8:value}                                                   # End port for this rule  Considered if I(protocol=tcp) or I(protocol=udp)  If not specified, equal I(start_port) 
    icmp_type: ${9:value}                                                  # Type of the icmp message being sent  Considered if I(protocol=icmp) 
    icmp_code: ${10:value}                                                 # Error code for this icmp message  Considered if I(protocol=icmp) 
    traffic_type: ${11$$(yas-choose-value '("ingress" "egress"))}          # choices: ingress;egress  Traffic type of the rule 
    action_policy: ${12$$(yas-choose-value '("allow" "deny"))}             # choices: allow;deny  Action policy of the rule 
    tags: ${13:value}                                                      # List of tags  Tags are a list of dictionaries having keys I(key) and I(value)  If you want to delete all tags, set a emp
    domain: ${14:value}                                                    # Domain the VPC is related to 
    account: ${15:value}                                                   # Account the VPC is related to 
    project: ${16:value}                                                   # Name of the project the VPC is related to 
    zone: ${17:value}                                                      # Name of the zone the VPC related to  If not set, default zone is used 
    state: ${18$$(yas-choose-value '("present" "absent"))}                 # choices: present;absent  State of the network ACL rule 
    poll_async: ${19:True}                                                 # Poll async jobs until job has finished 
    api_key: ${20:value}                                                   # API key of the CloudStack API  If not given, the C(CLOUDSTACK_KEY) env variable is considered  As the last option, the v
    api_secret: ${21:value}                                                # Secret key of the CloudStack API  If not set, the C(CLOUDSTACK_SECRET) env variable is considered  As the last option, t
    api_url: ${22:value}                                                   # URL of the CloudStack API e g  https://cloud example com/client/api  If not given, the C(CLOUDSTACK_ENDPOINT) env variab
    api_http_method: ${23$$(yas-choose-value '("get" "post"))}             # choices: get;post  HTTP method used to query the API endpoint  If not given, the C(CLOUDSTACK_METHOD) env variable is co
    api_timeout: ${24:value}                                               # HTTP timeout in seconds  If not given, the C(CLOUDSTACK_TIMEOUT) env variable is considered  As the last option, the val
    api_region: ${25:cloudstack}                                           # Name of the ini section in the C(cloustack ini) file  If not given, the C(CLOUDSTACK_REGION) env variable is considered 
