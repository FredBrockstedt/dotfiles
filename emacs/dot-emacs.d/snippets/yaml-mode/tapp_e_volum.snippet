# -*- mode: snippet -*-
# name: NetApp E-Series manage storage volumes (standard and thin)
# prefix: netapp_e_volume_snippet
# key: tapp_e_volum
# group: ansible
# --

- name: ${0:NetApp E-Series manage storage volumes (standard and thin)}
  netapp_e_volume:                                                         
    state: ${1$$(yas-choose-value '("present" "absent"))}                  # Whether the specified volume should exist
    name: ${2:The name of the volume to manage}                            #
    size: ${3:Required only when I(state=='present')}                      # Size of the volume in I(size_unit)  Size of the virtual volume in the case of a thin volume in I(size_unit)  Maximum vir
    api_username: ${4:The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API}#
    api_password: ${5:The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API}#
    api_url: ${6:The url to the SANtricity Web Services Proxy or Embedded Web Services API}# Example https://prod-1 wahoo acme com/devmgr/v2
    storage_pool_name: ${7:value}                                          # Required only when requested I(state=='present')  Name of the storage pool wherein the volume should reside 
    size_unit: ${8$$(yas-choose-value '("bytes" "b" "kb" "mb" "gb" "tb" "pb" "eb" "zb" "yb"))}# choices: bytes;b;kb;mb;gb;tb;pb;eb;zb;yb  The unit used to interpret the size parameter
    segment_size_kb: ${9:128}                                              # Segment size of the volume All values are in kibibytes  Some common choices include '8', '16', '32', '64', '128', '256',
    thin_provision: ${10:False}                                            # Whether the volume should be thin provisioned  Thin volumes can only be created when I(raid_level=="raidDiskPool")  Gene
    thin_volume_repo_size: ${11:value}                                     # This value (in size_unit) sets the allocated space for the thin provisioned repository  Initial value must between or eq
    thin_volume_max_repo_size: ${12:"same as size (in size_unit)"}         # This is the maximum amount the thin volume repository will be allowed to grow  Only has significance when I(thin_volume_
    thin_volume_expansion_policy: ${13$$(yas-choose-value '("automatic" "manual"))}# choices: automatic;manual  This is the thin volume expansion policy  When I(thin_volume_expansion_policy=="autom
    thin_volume_growth_alert_threshold: ${14:95}                           # This is the thin provision repository utilization threshold (in percent)  When the percentage of used storage of the max
    owning_controller: ${15$$(yas-choose-value '("A" "B"))}                # choices: A;B  Specifies which controller will be the primary owner of the volume Not specifying will allow the controlle
    ssd_cache_enabled: ${16:False}                                         # Whether an existing SSD cache should be enabled on the volume (fails if no SSD cache defined) The default value is to ig
    data_assurance_enabled: ${17:False}                                    # Determines whether data assurance (DA) should be enabled for the volume Only available when creating a new volume and on
    read_cache_enable: ${18:True}                                          # Indicates whether read caching should be enabled for the volume 
    read_ahead_enable: ${19:True}                                          # Indicates whether or not automatic cache read-ahead is enabled  This option has no effect on thinly provisioned volumes 
    write_cache_enable: ${20:True}                                         # Indicates whether write-back caching should be enabled for the volume 
    cache_without_batteries: ${21:False}                                   # Indicates whether caching should be used without battery backup  Warning, M(cache_without_batteries==true) and the stora
    workload_name: ${22:value}                                             # Label for the workload defined by the metadata  When I(workload_name) and I(metadata) are specified then the defined wor
    metadata: ${23:value}                                                  # Dictionary containing meta data for the use, user, location, etc of the volume (dictionary is arbitrarily defined for wh
    wait_for_initialization: ${24:False}                                   # Forces the module to wait for expansion operations to complete before continuing 
    initialization_timeout: ${25:value}                                    # Duration in seconds before the wait_for_initialization operation will terminate  M(wait_for_initialization==True) to hav
    validate_certs: ${26:True}                                             # Should https certificates be validated?
    ssid: ${27:1}                                                          # The ID of the array to manage  This value must be unique for each array 
