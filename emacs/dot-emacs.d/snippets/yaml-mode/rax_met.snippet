# -*- mode: snippet -*-
# name: Manipulate metadata for Rackspace Cloud Servers
# prefix: rax_meta_snippet
# key: rax_met
# group: ansible
# --

- name: ${0:Manipulate metadata for Rackspace Cloud Servers}
  rax_meta:                                                                
    address: ${1:value}                                                    # Server IP address to modify metadata for, will match any IP assigned to the server
    id: ${2:value}                                                         # Server ID to modify metadata for
    name: ${3:value}                                                       # Server name to modify metadata for
    meta: ${4:value}                                                       # A hash of metadata to associate with the instance
    api_key: ${5:value}                                                    # Rackspace API key, overrides I(credentials) 
    auth_endpoint: ${{6:https://identity}                                  #api rackspacecloud com/v2 0/} # not required  The URI of the authentication service 
    credentials: ${7:value}                                                # File to find the Rackspace credentials in  Ignored if I(api_key) and I(username) are provided 
    env: ${8:value}                                                        # Environment as configured in I(~/ pyrax cfg), see U(https://github com/rackspace/pyrax/blob/master/docs/getting_started 
    identity_type: ${9:rackspace}                                          # Authentication mechanism to use, such as rackspace or keystone 
    region: ${10:DFW}                                                      # Region to create an instance in 
    tenant_id: ${11:value}                                                 # The tenant ID used for authentication 
    tenant_name: ${12:value}                                               # The tenant name used for authentication 
    username: ${13:value}                                                  # Rackspace username, overrides I(credentials) 
    validate_certs: ${14:value}                                            # Whether or not to require SSL validation of API endpoints 
