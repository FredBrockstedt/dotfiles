# -*- mode: snippet -*-
# name: Creates a GCP BucketAccessControl
# prefix: gcp_storage_bucket_access_control_snippet
# key: gcp_storage_bucket_access_contro
# group: ansible
# --

- name: ${0:Creates a GCP BucketAccessControl}
  gcp_storage_bucket_access_control:                                       
    bucket: ${1:The name of the bucket}                                    # This field represents a link to a Bucket resource in GCP  It can be specified in two ways  First, you can place a dictio
    entity: ${2:The entity holding the permission, in one of the following forms: user-userId user-email group-groupId group-email domain-domain project-team-projectId allUsers allAuthenticatedUser
    auth_kind: ${3$$(yas-choose-value '("application" "machineaccount" "serviceaccount"))}# The type of credential used 
    state: ${4$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  Whether the given object should exist in GCP
    entity_id: ${5:value}                                                  # The ID for the entity 
    project_team: ${6:value}                                               # The project team associated with the entity 
    role: ${7:value}                                                       # The access permission for the entity  Some valid choices include: "OWNER", "READER", "WRITER"
    project: ${8:value}                                                    # The Google Cloud Platform project to use 
    service_account_contents: ${9:value}                                   # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it 
    service_account_file: ${10:value}                                      # The path of a Service Account JSON file if serviceaccount is selected as type 
    service_account_email: ${11:value}                                     # An optional service account email address if machineaccount is selected and the user does not wish to use the default em
    scopes: ${12:value}                                                    # Array of scopes to be used 
    env_type: ${13:value}                                                  # Specifies which Ansible environment you're running this module within  This should not be set unless you know what you'r
