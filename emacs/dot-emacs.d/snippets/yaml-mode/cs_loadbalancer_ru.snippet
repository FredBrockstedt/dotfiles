# -*- mode: snippet -*-
# name: Manages load balancer rules on Apache CloudStack based clouds.
# prefix: cs_loadbalancer_rule_snippet
# key: cs_loadbalancer_ru
# group: ansible
# --

- name: ${0:Manages load balancer rules on Apache CloudStack based clouds.}
  cs_loadbalancer_rule:                                                    
    name: ${1:The name of the load balancer rule}                          #
    public_port: ${2:The public port from where the network traffic will be load balanced from}# Required when using I(state=present)  Can not be changed once the rule exists due API limitation 
    ip_address: ${3:Public IP address from where the network traffic will be load balanced from}#
    description: ${4:value}                                                # The description of the load balancer rule 
    algorithm: ${5$$(yas-choose-value '("source" "roundrobin" "leastconn"))}# choices: source;roundrobin;leastconn  Load balancer algorithm Required when using I(state=present) 
    private_port: ${6:value}                                               # The private port of the private ip address/virtual machine where the network traffic will be load balanced to  Required 
    open_firewall: ${7:False}                                              # Whether the firewall rule for public port should be created, while creating the new rule  Use M(cs_firewall) for managin
    cidr: ${8:value}                                                       # CIDR (full notation) to be used for firewall rule if required 
    protocol: ${9:value}                                                   # The protocol to be used on the load balancer
    project: ${10:value}                                                   # Name of the project the load balancer IP address is related to 
    state: ${11$$(yas-choose-value '("present" "absent"))}                 # choices: present;absent  State of the rule 
    domain: ${12:value}                                                    # Domain the rule is related to 
    account: ${13:value}                                                   # Account the rule is related to 
    zone: ${14:value}                                                      # Name of the zone in which the rule should be created  If not set, default zone is used 
    poll_async: ${15:True}                                                 # Poll async jobs until job has finished 
    tags: ${16:value}                                                      # List of tags  Tags are a list of dictionaries having keys I(key) and I(value)  To delete all tags, set a empty list e g 
    network: ${17:value}                                                   # Name of the network 
    vpc: ${18:value}                                                       # Name of the VPC 
    api_key: ${19:value}                                                   # API key of the CloudStack API  If not given, the C(CLOUDSTACK_KEY) env variable is considered  As the last option, the v
    api_secret: ${20:value}                                                # Secret key of the CloudStack API  If not set, the C(CLOUDSTACK_SECRET) env variable is considered  As the last option, t
    api_url: ${21:value}                                                   # URL of the CloudStack API e g  https://cloud example com/client/api  If not given, the C(CLOUDSTACK_ENDPOINT) env variab
    api_http_method: ${22$$(yas-choose-value '("get" "post"))}             # choices: get;post  HTTP method used to query the API endpoint  If not given, the C(CLOUDSTACK_METHOD) env variable is co
    api_timeout: ${23:value}                                               # HTTP timeout in seconds  If not given, the C(CLOUDSTACK_TIMEOUT) env variable is considered  As the last option, the val
    api_region: ${24:cloudstack}                                           # Name of the ini section in the C(cloustack ini) file  If not given, the C(CLOUDSTACK_REGION) env variable is considered 
