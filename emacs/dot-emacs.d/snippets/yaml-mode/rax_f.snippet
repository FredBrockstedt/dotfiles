# -*- mode: snippet -*-
# name: Manipulate Rackspace Cloud Files Containers
# prefix: rax_files_snippet
# key: rax_f
# group: ansible
# --

- name: ${0:Manipulate Rackspace Cloud Files Containers}
  rax_files:                                                               
    container: ${1:The container to use for container or metadata operations}#
    clear_meta: ${2:false}                                                 # Optionally clear existing metadata when applying metadata to existing containers  Selecting this option is only appropri
    meta: ${3:value}                                                       # A hash of items to set as metadata values on a container
    private: ${4:value}                                                    # Used to set a container as private, removing it from the CDN   B(Warning!) Private containers, if previously made public
    public: ${5:value}                                                     # Used to set a container as public, available via the Cloud Files CDN
    region: ${6:DFW}                                                       # Region to create an instance in
    state: ${7$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  Indicate desired state of the resource
    ttl: ${8:value}                                                        # In seconds, set a container-wide TTL for all objects cached on CDN edge nodes  Setting a TTL is only appropriate for con
    type: ${9$$(yas-choose-value '("file" "meta"))}                        # choices: file;meta  Type of object to do work on, i e  metadata object or a container object
    web_error: ${10:value}                                                 # Sets an object to be presented as the HTTP error page when accessed by the CDN URL
    web_index: ${11:value}                                                 # Sets an object to be presented as the HTTP index page when accessed by the CDN URL
    api_key: ${12:value}                                                   # Rackspace API key, overrides I(credentials) 
    credentials: ${13:value}                                               # File to find the Rackspace credentials in  Ignored if I(api_key) and I(username) are provided 
    env: ${14:value}                                                       # Environment as configured in I(~/ pyrax cfg), see U(https://github com/rackspace/pyrax/blob/master/docs/getting_started 
    username: ${15:value}                                                  # Rackspace username, overrides I(credentials) 
    validate_certs: ${16:value}                                            # Whether or not to require SSL validation of API endpoints 
    auth_endpoint: ${{17:https://identity}                                 #api rackspacecloud com/v2 0/} # not required  The URI of the authentication service 
    identity_type: ${18:rackspace}                                         # Authentication mechanism to use, such as rackspace or keystone 
    tenant_id: ${19:value}                                                 # The tenant ID used for authentication 
    tenant_name: ${20:value}                                               # The tenant name used for authentication 
