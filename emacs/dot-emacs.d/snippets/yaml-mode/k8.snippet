# -*- mode: snippet -*-
# name: Manage Kubernetes (K8s) objects
# prefix: k8s_snippet
# key: k8
# group: ansible
# --

- name: ${0:Manage Kubernetes (K8s) objects}
  k8s:                                                                     
    merge_type: ${1$$(yas-choose-value '("json" "merge" "strategic-merge"))}# choices: json;merge;strategic-merge  Whether to override the default patch merge approach with a specific type  By defa
    wait: ${2:False}                                                       # Whether to wait for certain resource kinds to end up in the desired state  By default the module exits once Kubernetes h
    wait_sleep: ${3:5}                                                     # Number of seconds to sleep between checks 
    wait_timeout: ${4:120}                                                 # How long in seconds to wait for the resource to end up in the desired state  Ignored if C(wait) is not set 
    wait_condition: ${5:value}                                             # Specifies a custom condition on the status to wait for  Ignored if C(wait) is not set or is set to False 
    validate: ${6:value}                                                   # how (if at all) to validate the resource definition against the kubernetes schema  Requires the kubernetes-validate pyth
    append_hash: ${7:value}                                                # Whether to append a hash to a resource name for immutability purposes Applies only to ConfigMap and Secret resources The
    apply: ${8:value}                                                      # C(apply) compares the desired resource definition with the previously supplied resource definition, ignoring properties 
    state: ${9$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  Determines if an object should be created, patched, or deleted  When set to C(present), an obje
    force: ${10:False}                                                     # If set to C(yes), and I(state) is C(present), an existing object will be replaced 
    api_version: ${11:v1}                                                  # Use to specify the API version  Use to create, delete, or discover an object without providing a full resource definitio
    kind: ${12:value}                                                      # Use to specify an object model  Use to create, delete, or discover an object without providing a full resource definitio
    name: ${13:value}                                                      # Use to specify an object name  Use to create, delete, or discover an object without providing a full resource definition
    namespace: ${14:value}                                                 # Use to specify an object namespace  Useful when creating, deleting, or discovering an object without providing a full re
    resource_definition: ${15:value}                                       # Provide a valid YAML definition (either as a string, list, or dict) for an object when creating or updating  NOTE: I(kin
    src: ${16:value}                                                       # Provide a path to a file containing a valid YAML definition of an object or objects to be created or updated  Mutually e
    host: ${17:value}                                                      # Provide a URL for accessing the API  Can also be specified via K8S_AUTH_HOST environment variable 
    api_key: ${18:value}                                                   # Token used to authenticate with the API  Can also be specified via K8S_AUTH_API_KEY environment variable 
    kubeconfig: ${19:value}                                                # Path to an existing Kubernetes config file  If not provided, and no other connection options are provided, the openshift
    context: ${20:value}                                                   # The name of a context found in the config file  Can also be specified via K8S_AUTH_CONTEXT environment variable 
    username: ${21:value}                                                  # Provide a username for authenticating with the API  Can also be specified via K8S_AUTH_USERNAME environment variable  Pl
    password: ${22:value}                                                  # Provide a password for authenticating with the API  Can also be specified via K8S_AUTH_PASSWORD environment variable  Pl
    client_cert: ${23:value}                                               # Path to a certificate used to authenticate with the API  Can also be specified via K8S_AUTH_CERT_FILE environment variab
    client_key: ${24:value}                                                # Path to a key file used to authenticate with the API  Can also be specified via K8S_AUTH_KEY_FILE environment variable 
    ca_cert: ${25:value}                                                   # Path to a CA certificate used to authenticate with the API  The full certificate chain must be provided to avoid certifi
    validate_certs: ${26:value}                                            # Whether or not to verify the API server's SSL certificates  Can also be specified via K8S_AUTH_VERIFY_SSL environment va
    proxy: ${27:value}                                                     # The URL of an HTTP proxy to use for the connection  Can also be specified via K8S_AUTH_PROXY environment variable  Pleas
