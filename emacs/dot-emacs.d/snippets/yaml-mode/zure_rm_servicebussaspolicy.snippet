# -*- mode: snippet -*-
# name: Manage Azure Service Bus SAS policy
# prefix: azure_rm_servicebussaspolicy_snippet
# key: zure_rm_servicebussaspolicy
# group: ansible
# --

- name: ${0:Manage Azure Service Bus SAS policy}
  azure_rm_servicebussaspolicy:                                            
    resource_group: ${1:Name of resource group}                            #
    name: ${2:Name of the SAS policy}                                      #
    namespace: ${3:Manage SAS policy for a namespace without C(queue) or C(topic) set}# Manage SAS policy for a queue or topic under this namespace 
    rights: ${4$$(yas-choose-value '("manage" "listen" "send" "listen_send"))}# Claim rights of the SAS policy 
    state: ${5$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  Assert the state of the route  Use C(present) to create or update and C(absent) to delete 
    queue: ${6:value}                                                      # Type of the messaging queue  Cannot set C(topc) when this field set 
    topic: ${7:value}                                                      # Name of the messaging topic  Cannot set C(queue) when this field set 
    regenerate_primary_key: ${8:False}                                     # Regenerate the SAS policy primary key 
    regenerate_secondary_key: ${9:False}                                   # Regenerate the SAS policy secondary key 
    ad_user: ${10:value}                                                   # Active Directory username  Use when authenticating with an Active Directory user rather than service principal 
    password: ${11:value}                                                  # Active Directory user password  Use when authenticating with an Active Directory user rather than service principal 
    profile: ${12:value}                                                   # Security profile found in ~/ azure/credentials file 
    subscription_id: ${13:value}                                           # Your Azure subscription Id 
    client_id: ${14:value}                                                 # Azure client ID  Use when authenticating with a Service Principal 
    secret: ${15:value}                                                    # Azure client secret  Use when authenticating with a Service Principal 
    tenant: ${16:value}                                                    # Azure tenant ID  Use when authenticating with a Service Principal 
    cloud_environment: ${17:AzureCloud}                                    # For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(Azure
    adfs_authority_url: ${18:value}                                        # Azure AD authority url  Use when authenticating with Username/password, and has your own ADFS authority 
    cert_validation_mode: ${19$$(yas-choose-value '("ignore" "validate"))} # choices: ignore;validate  Controls the certificate validation behavior for Azure endpoints  By default, all modules will
    auth_source: ${20$$(yas-choose-value '("auto" "cli" "credential_file" "env" "msi"))}# choices: auto;cli;credential_file;env;msi  Controls the source of the credentials to use for authentication
    api_profile: ${21:latest}                                              # Selects an API profile to use when communicating with Azure services  Default value of C(latest) is appropriate for publ
    tags: ${22:value}                                                      # Dictionary of string:string pairs to assign as metadata to the object  Metadata tags on the object will be updated with 
    append_tags: ${23:True}                                                # Use to control if tags field is canonical or just appends to existing tags  When canonical, any tags not found in the ta
