# -*- mode: snippet -*-
# name: Manages the certificate store
# prefix: win_certificate_store_snippet
# key: win_certificate_stor
# group: ansible
# --

- name: ${0:Manages the certificate store}
  win_certificate_store:                                                   
    state: ${1$$(yas-choose-value '("absent" "exported" "present"))}       # choices: absent;exported;present  If C(present), will ensure that the certificate at I(path) is imported into the certif
    path: ${2:value}                                                       # The path to a certificate file  This is required when I(state) is C(present) or C(exported)  When I(state) is C(absent) 
    thumbprint: ${3:value}                                                 # The thumbprint as a hex string to either export or remove  See the examples for how to specify the thumbprint 
    store_name: ${4$$(yas-choose-value '("AddressBook" "AuthRoot" "CertificateAuthority" "Disallowed" "My" "Root" "TrustedPeople" "TrustedPublisher"))}# choices: AddressBook;AuthRoot;CertificateAut
    store_location: ${5$$(yas-choose-value '("CurrentUser" "LocalMachine"))}# choices: CurrentUser;LocalMachine  The store location to use when importing a certificate or searching for a certificat
    password: ${6:value}                                                   # The password of the pkcs12 certificate key  This is used when reading a pkcs12 certificate file or the password to set w
    key_exportable: ${7:True}                                              # Whether to allow the private key to be exported  If C(no), then this module and other process will only be able to expor
    key_storage: ${8$$(yas-choose-value '("default" "machine" "user"))}    # choices: default;machine;user  Specifies where Windows will store the private key when it is imported  When set to C(def
    file_type: ${9$$(yas-choose-value '("der" "pem" "pkcs12"))}            # choices: der;pem;pkcs12  The file type to export the certificate as when C(state=exported)  C(der) is a binary ASN 1 enc
