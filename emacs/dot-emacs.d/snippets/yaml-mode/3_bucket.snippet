# -*- mode: snippet -*-
# name: Manage S3 buckets in AWS, DigitalOcean, Ceph, Walrus and FakeS3
# prefix: s3_bucket_snippet
# key: 3_bucket
# group: ansible
# --

- name: ${0:Manage S3 buckets in AWS, DigitalOcean, Ceph, Walrus and FakeS3}
  s3_bucket:                                                               
    name: ${1:Name of the s3 bucket}                                       #
    force: ${2:false}                                                      # When trying to delete a bucket, delete all keys (including versions and delete markers) in the bucket first (an s3 bucke
    policy: ${3:value}                                                     # The JSON policy as a string 
    s3_url: ${4:value}                                                     # S3 URL endpoint for usage with DigitalOcean, Ceph, Eucalyptus and fakes3 etc  Assumes AWS if not specified  For Walrus, 
    ceph: ${5:value}                                                       # Enable API compatibility with Ceph  It takes into account the S3 API subset working with Ceph in order to provide the sa
    requester_pays: ${6:False}                                             # With Requester Pays buckets, the requester instead of the bucket owner pays the cost of the request and the data downloa
    state: ${7$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  Create or remove the s3 bucket
    tags: ${8:value}                                                       # tags dict to apply to bucket
    purge_tags: ${9:True}                                                  # whether to remove tags that aren't present in the C(tags) parameter
    versioning: ${10:value}                                                # Whether versioning is enabled or disabled (note that once versioning is enabled, it can only be suspended)
    encryption: ${11$$(yas-choose-value '("none" "AES256" "aws:kms"))}     # choices: none;AES256;aws:kms  Describes the default server-side encryption to apply to new objects in the bucket  In ord
    encryption_key_id: ${12:value}                                         # K M S   m a s t e r   k e y   I D   t o   u s e   f o r   t h e   d e f a u l t   e n c r y p t i o n     T h i s   p a 
    debug_botocore_endpoint_logs: ${13:false}                              # Use a botocore endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, o
    ec2_url: ${14:value}                                                   # Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints)  Ignored for module
    aws_secret_key: ${15:value}                                            # AWS secret key  If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment va
    aws_access_key: ${16:value}                                            # AWS access key  If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variabl
    security_token: ${17:value}                                            # AWS STS security token  If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable i
    validate_certs: ${18:True}                                             # When set to "no", SSL certificates will not be validated for boto versions >= 2 6 0 
    profile: ${19:value}                                                   # Uses a boto profile  Only works with boto >= 2 24 0 
    region: ${20:value}                                                    # The AWS region to use  If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is 
