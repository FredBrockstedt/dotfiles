# -*- mode: snippet -*-
# name: Manage server configuration
# prefix: netscaler_server_snippet
# key: tscaler_server
# group: ansible
# --

- name: ${0:Manage server configuration}
  netscaler_server:                                                        
    nsip: ${1:The ip address of the netscaler appliance where the nitro API calls will be made}# The port can be specified with the colon (:)  E g  192 168 1 1:555 
    nitro_user: ${2:The username with which to authenticate to the netscaler node}#
    nitro_pass: ${3:The password with which to authenticate to the netscaler node}#
    name: ${4:value}                                                       # Name for the server  Must begin with an ASCII alphabetic or underscore C(_) character, and must contain only ASCII alpha
    ipaddress: ${5:value}                                                  # IPv4 or IPv6 address of the server  If you create an IP address based server, you can specify the name of the server, in
    domain: ${6:value}                                                     # Domain name of the server  For a domain based configuration, you must create the server first  Minimum length = 1
    translationip: ${7:value}                                              # IP address used to transform the server's DNS-resolved IP address 
    translationmask: ${8:value}                                            # The netmask of the translation ip 
    domainresolveretry: ${9:5}                                             # Time, in seconds, for which the NetScaler appliance must wait, after DNS resolution fails, before sending the next DNS q
    ipv6address: ${10:False}                                               # Support IPv6 addressing mode  If you configure a server with the IPv6 addressing mode, you cannot use the server in the 
    comment: ${11:value}                                                   # Any information about the server 
    td: ${12:value}                                                        # Integer value that uniquely identifies the traffic domain in which you want to configure the entity  If you do not speci
    graceful: ${13:value}                                                  # Shut down gracefully, without accepting any new connections, and disabling each service when all of its connections are 
    delay: ${14:value}                                                     # Time, in seconds, after which all the services configured on the server are disabled  This option is meaningful only whe
    disabled: ${15:False}                                                  # When set to C(true) the server state will be set to C(disabled)  When set to C(false) the server state will be set to C(
    nitro_protocol: ${16$$(yas-choose-value '("http" "https"))}            # choices: http;https  Which protocol to use when accessing the nitro API objects 
    validate_certs: ${17:True}                                             # If C(no), SSL certificates will not be validated  This should only be used on personally controlled sites using self-sig
    nitro_timeout: ${18:310}                                               # Time in seconds until a timeout error is thrown when establishing a new session with Netscaler
    state: ${19$$(yas-choose-value '("absent" "present"))}                 # choices: absent;present  The state of the resource being configured by the module on the netscaler node  When present th
    save_config: ${20:True}                                                # If C(yes) the module will save the configuration on the netscaler node if it makes any changes  The module will not save
