# -*- mode: snippet -*-
# name: Manage utility license assignment on BIG-IPs from a BIG-IQ
# prefix: bigiq_utility_license_assignment_snippet
# key: giq_utility_license_assignment
# group: ansible
# --

- name: ${0:Manage utility license assignment on BIG-IPs from a BIG-IQ}
  bigiq_utility_license_assignment:                                        
    key: ${1:The registration key that you want choose an offering from}   #
    unit_of_measure: ${2$$(yas-choose-value '("hourly" "daily" "monthly" "yearly"))}# choices: hourly;daily;monthly;yearly  Sets the rate at which this license usage is billed  Depending on your li
    offering: ${3:value}                                                   # Name of the license offering to assign to the device 
    device: ${4:value}                                                     # When C(managed) is C(no), specifies the address, or hostname, where the BIG-IQ can reach the remote device to register  
    managed: ${5:value}                                                    # Whether the specified device is a managed or un-managed device  When C(state) is C(present), this parameter is required 
    device_port: ${6:443}                                                  # Specifies the port of the remote device to connect to  If this parameter is not specified, the default of C(443) will be
    device_username: ${7:value}                                            # The username used to connect to the remote device  This username should be one that has sufficient privileges on the rem
    device_password: ${8:value}                                            # The password of the C(device_username)  When C(managed) is C(no), this parameter is required 
    state: ${9$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  When C(present), ensures that the device is assigned the specified license  When C(absent), ens
    provider: ${10:value}                                                  # A dict object containing connection details 
