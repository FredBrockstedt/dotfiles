# -*- mode: snippet -*-
# name: Manage docker images.
# prefix: docker_image_snippet
# key: docker_imag
# group: ansible
# --

- name: ${0:Manage docker images.}
  docker_image:                                                            
    name: ${1:Image name}                                                  # Name format will be one of: name, repository/name, registry_server:port/name  When pushing or pulling an image the name 
    source: ${2$$(yas-choose-value '("build" "load" "pull" "local"))}      # choices: build;load;pull;local  Determines where the module will try to retrieve the image from  Use C(build) to build t
    build: ${3:value}                                                      # Specifies options used for building images 
    archive_path: ${4:value}                                               # Use with state C(present) to archive an image to a  tar file 
    load_path: ${5:value}                                                  # Use with state C(present) to load an image from a  tar file  Set I(source) to C(load) if you want to load the image  The
    dockerfile: ${6:value}                                                 # Use with state C(present) and source C(build) to provide an alternate name for the Dockerfile to use when building an im
    force: ${7:value}                                                      # Use with state I(absent) to un-tag and remove all images matching the specified name  Use with state C(present) to build
    force_source: ${8:False}                                               # Use with state C(present) to build, load or pull an image (depending on the value of the I(source) option) when the imag
    force_absent: ${9:False}                                               # Use with state I(absent) to un-tag and remove all images matching the specified name 
    force_tag: ${10:False}                                                 # Use with state C(present) to force tagging an image 
    http_timeout: ${11:value}                                              # Timeout for HTTP requests during the image build operation  Provide a positive integer value for the number of seconds  
    path: ${12:value}                                                      # Use with state 'present' to build an image  Will be the path to a directory containing the context and Dockerfile for bu
    pull: ${13:value}                                                      # When building an image downloads any updates to the FROM image in Dockerfile  Please use I(build pull) instead  This opt
    push: ${14:False}                                                      # Push the image to the registry  Specify the registry as part of the I(name) or I(repository) parameter 
    rm: ${15:True}                                                         # Remove intermediate containers after build  Please use I(build rm) instead  This option will be removed in Ansible 2 12 
    nocache: ${16:False}                                                   # Do not use cache when building an image  Please use I(build nocache) instead  This option will be removed in Ansible 2 1
    repository: ${17:value}                                                # Full path to a repository  Use with state C(present) to tag the image into the repository  Expects format I(repository:t
    state: ${18$$(yas-choose-value '("absent" "present" "build"))}         # choices: absent;present;build  Make assertions about the state of an image  When C(absent) an image will be removed  Use
    tag: ${19:latest}                                                      # Used to select an image when pulling  Will be added to the image when pushing, tagging or building  Defaults to I(latest
    buildargs: ${20:value}                                                 # Provide a dictionary of C(key:value) build arguments that map to Dockerfile ARG directive  Docker expects the value to b
    container_limits: ${21:value}                                          # A dictionary of limits applied to each container created by the build process  Please use I(build container_limits) inst
    use_tls: ${22$$(yas-choose-value '("false" "encrypt" "verify"))}       # choices: no;encrypt;verify  DEPRECATED  Whether to use tls to connect to the docker daemon  Set to C(encrypt) to use TLS
    docker_host: ${{23:unix://var/run/docker}                              #sock} # not required  The URL or Unix socket path used to connect to the Docker API  To connect to a remote host, provide
    tls_hostname: ${24:localhost}                                          # When verifying the authenticity of the Docker Host server, provide the expected name of the server  If the value is not 
    api_version: ${25:auto}                                                # The version of the Docker API running on the Docker Host  Defaults to the latest version of the API supported by Docker 
    timeout: ${26:60}                                                      # The maximum amount of time in seconds to wait on a response from the API  If the value is not specified in the task, the
    ca_cert: ${27:value}                                                   # Use a CA certificate when performing server verification by providing the path to a CA certificate file  If the value is
    client_cert: ${28:value}                                               # Path to the client's TLS certificate file  If the value is not specified in the task and the environment variable C(DOCK
    client_key: ${29:value}                                                # Path to the client's TLS key file  If the value is not specified in the task and the environment variable C(DOCKER_CERT_
    ssl_version: ${30:value}                                               # Provide a valid SSL version number  Default value determined by ssl py module  If the value is not specified in the task
    tls: ${31:False}                                                       # Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server  Note that if
    validate_certs: ${32:False}                                            # Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server  If the value is 
    debug: ${33:False}                                                     # Debug mode
