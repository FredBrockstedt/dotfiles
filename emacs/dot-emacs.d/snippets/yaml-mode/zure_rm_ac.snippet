# -*- mode: snippet -*-
# name: Manage an Azure Container Service(ACS) instance
# prefix: azure_rm_acs_snippet
# key: zure_rm_ac
# group: ansible
# --

- name: ${0:Manage an Azure Container Service(ACS) instance}
  azure_rm_acs:                                                            
    resource_group: ${1:Name of a resource group where the Container Services exists or will be created}#
    name: ${2:Name of the Azure Container Services(ACS) instance}          #
    orchestration_platform: ${3$$(yas-choose-value '("DCOS" "Kubernetes" "Swarm"))}# Specifies the Container Orchestration Platform to use  Currently can be either C(DCOS), C(Kubernetes) or C(Swarm
    master_profile: ${4:Master profile suboptions}                         #
    linux_profile: ${5:The Linux profile suboptions}                       #
    agent_pool_profiles: ${6:The agent pool profile suboptions}            #
    diagnostics_profile: ${7:Should VM Diagnostics be enabled for the Container Service VM's}#
    state: ${8$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  Assert the state of the ACS  Use C(present) to create or update an ACS and C(absent) to delete 
    location: ${9:value}                                                   # Valid azure location  Defaults to location of the resource group 
    service_principal: ${10:value}                                         # The service principal suboptions  Required when I(orchestration_platform=Kubernetes) 
    ad_user: ${11:value}                                                   # Active Directory username  Use when authenticating with an Active Directory user rather than service principal 
    password: ${12:value}                                                  # Active Directory user password  Use when authenticating with an Active Directory user rather than service principal 
    profile: ${13:value}                                                   # Security profile found in ~/ azure/credentials file 
    subscription_id: ${14:value}                                           # Your Azure subscription Id 
    client_id: ${15:value}                                                 # Azure client ID  Use when authenticating with a Service Principal 
    secret: ${16:value}                                                    # Azure client secret  Use when authenticating with a Service Principal 
    tenant: ${17:value}                                                    # Azure tenant ID  Use when authenticating with a Service Principal 
    cloud_environment: ${18:AzureCloud}                                    # For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(Azure
    adfs_authority_url: ${19:value}                                        # Azure AD authority url  Use when authenticating with Username/password, and has your own ADFS authority 
    cert_validation_mode: ${20$$(yas-choose-value '("ignore" "validate"))} # choices: ignore;validate  Controls the certificate validation behavior for Azure endpoints  By default, all modules will
    auth_source: ${21$$(yas-choose-value '("auto" "cli" "credential_file" "env" "msi"))}# choices: auto;cli;credential_file;env;msi  Controls the source of the credentials to use for authentication
    api_profile: ${22:latest}                                              # Selects an API profile to use when communicating with Azure services  Default value of C(latest) is appropriate for publ
    tags: ${23:value}                                                      # Dictionary of string:string pairs to assign as metadata to the object  Metadata tags on the object will be updated with 
    append_tags: ${24:True}                                                # Use to control if tags field is canonical or just appends to existing tags  When canonical, any tags not found in the ta
