# -*- mode: snippet -*-
# name: Manage VLANs in the Meraki cloud
# prefix: meraki_vlan_snippet
# key: meraki_v
# group: ansible
# --

- name: ${0:Manage VLANs in the Meraki cloud}
  meraki_vlan:                                                             
    auth_key: ${1:Authentication key provided by the dashboard}            # Required if environmental variable C(MERAKI_KEY) is not set 
    state: ${2$$(yas-choose-value '("absent" "present" "query"))}          # choices: absent;present;query  Specifies whether object should be queried, created/modified, or removed 
    net_name: ${3:value}                                                   # Name of network which VLAN is in or should be in 
    net_id: ${4:value}                                                     # ID of network which VLAN is in or should be in 
    vlan_id: ${5:value}                                                    # ID number of VLAN  ID should be between 1-4096 
    name: ${6:value}                                                       # Name of VLAN 
    subnet: ${7:value}                                                     # CIDR notation of network subnet 
    appliance_ip: ${8:value}                                               # IP address of appliance  Address must be within subnet specified in C(subnet) parameter 
    dns_nameservers: ${9:value}                                            # Semi-colon delimited list of DNS IP addresses  Specify one of the following options for preprogrammed DNS entries opendn
    reserved_ip_range: ${10:value}                                         # IP address ranges which should be reserve and not distributed via DHCP 
    vpn_nat_subnet: ${11:value}                                            # The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN 
    fixed_ip_assignments: ${12:value}                                      # Static IP address assignments to be distributed via DHCP by MAC address 
    host: ${{13:api}                                                       #meraki com} # not required  Hostname for Meraki dashboard  Can be used to access regional Meraki environments, such as Ch
    use_proxy: ${14:value}                                                 # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts 
    use_https: ${15:True}                                                  # If C(no), it will use HTTP  Otherwise it will use HTTPS  Only useful for internal Meraki developers 
    output_format: ${16$$(yas-choose-value '("snakecase" "camelcase"))}    # choices: snakecase;camelcase  Instructs module whether response keys should be snake case (ex  C(net_id)) or camel case 
    output_level: ${17$$(yas-choose-value '("debug" "normal"))}            # choices: debug;normal  Set amount of debug output during module execution 
    timeout: ${18:30}                                                      # Time to timeout for HTTP requests 
    validate_certs: ${19:True}                                             # Whether to validate HTTP certificates 
    org_name: ${20:value}                                                  # Name of organization 
    org_id: ${21:value}                                                    # ID of organization 
    rate_limit_retry_time: ${22:165}                                       # Number of seconds to retry if rate limiter is triggered 
    internal_error_retry_time: ${23:60}                                    # Number of seconds to retry if server returns an internal server error 
