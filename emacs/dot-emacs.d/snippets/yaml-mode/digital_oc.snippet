# -*- mode: snippet -*-
# name: Create/delete a droplet/SSH_key in DigitalOcean
# prefix: digital_ocean_snippet
# key: digital_oc
# group: ansible
# --

- name: ${0:Create/delete a droplet/SSH_key in DigitalOcean}
  digital_ocean:                                                           
    command: ${1$$(yas-choose-value '("droplet" "ssh"))}                   # choices: droplet;ssh  Which target you want to operate on 
    state: ${2$$(yas-choose-value '("present" "active" "absent" "deleted"))}# choices: present;active;absent;deleted  Indicate desired state of the target 
    api_token: ${3:value}                                                  # DigitalOcean api token 
    id: ${4:value}                                                         # Numeric, the droplet id you want to operate on 
    name: ${5:value}                                                       # String, this is the name of the droplet - must be formatted by hostname rules, or the name of a SSH key 
    unique_name: ${6:false}                                                # Bool, require unique hostnames   By default, DigitalOcean allows multiple hosts with the same name   Setting this to "ye
    size_id: ${7:value}                                                    # This is the slug of the size you would like the droplet created with 
    image_id: ${8:value}                                                   # This is the slug of the image you would like the droplet created with 
    region_id: ${9:value}                                                  # This is the slug of the region you would like your server to be created in 
    ssh_key_ids: ${10:value}                                               # Optional, array of SSH key (numeric) ID that you would like to be added to the server 
    virtio: ${11:true}                                                     # Bool, turn on virtio driver in droplet for improved network and storage I/O 
    private_networking: ${12:false}                                        # Bool, add an additional, private network interface to droplet for inter-droplet communication 
    backups_enabled: ${13:false}                                           # Optional, Boolean, enables backups for your droplet 
    user_data: ${14:value}                                                 # opaque blob of data which is made available to the droplet
    ipv6: ${15:false}                                                      # Optional, Boolean, enable IPv6 for your droplet 
    wait: ${16:true}                                                       # Wait for the droplet to be in state 'running' before returning   If wait is "no" an ip_address may not be returned 
    wait_timeout: ${17:300}                                                # How long before wait gives up, in seconds 
    ssh_pub_key: ${18:value}                                               # The public SSH key you want to add to your account 
