# -*- mode: snippet -*-
# name: NetApp ONTAP manage object store config.
# prefix: na_ontap_object_store_snippet
# key: ontap_object_stor
# group: ansible
# --

- name: ${0:NetApp ONTAP manage object store config.}
  na_ontap_object_store:                                                   
    name: ${1:The name of the object store config to manage}               #
    hostname: ${2:The hostname or IP address of the ONTAP instance}        #
    username: ${3:This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required}# For more information, please read the documentation U(https
    password: ${4:Password for the specified user}                         #
    state: ${5$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  Whether the specified object store config should exist or not 
    provider_type: ${6:value}                                              # The name of the object store config provider 
    server: ${7:value}                                                     # Fully qualified domain name of the object store config 
    container: ${8:value}                                                  # Data bucket/container name used in S3 requests 
    access_key: ${9:value}                                                 # Access key ID for AWS_S3 and SGWS provider types 
    secret_password: ${10:value}                                           # Secret access key for AWS_S3 and SGWS provider types 
    https: ${11:False}                                                     # Enable and disable https
    validate_certs: ${12:True}                                             # If set to C(no), the SSL certificates will not be validated  This should only set to C(False) used on personally control
    http_port: ${13:value}                                                 # Override the default port (80 or 443) with this port
    ontapi: ${14:value}                                                    # The ontap api version to use
    use_rest: ${15$$(yas-choose-value '("Never" "Always" "Auto"))}         # choices: Never;Always;Auto  REST API if supported by the target system for all the resources and attributes the module r
