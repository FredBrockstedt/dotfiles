# -*- mode: snippet -*-
# name: Create and delete AWS VPC Endpoints.
# prefix: ec2_vpc_endpoint_snippet
# key: c2_vpc_endpoint
# group: ansible
# --

- name: ${0:Create and delete AWS VPC Endpoints.}
  ec2_vpc_endpoint:                                                        
    vpc_id: ${1:value}                                                     # Required when creating a VPC endpoint 
    service: ${2:value}                                                    # An AWS supported vpc endpoint service  Use the M(ec2_vpc_endpoint_info) module to describe the supported endpoint servic
    policy: ${3:value}                                                     # A properly formatted json policy as string, see U(https://github com/ansible/ansible/issues/7005#issuecomment-42894813) 
    policy_file: ${4:value}                                                # The path to the properly json formatted policy file, see U(https://github com/ansible/ansible/issues/7005#issuecomment-4
    state: ${5$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  present to ensure resource is created  absent to remove resource
    wait: ${6:False}                                                       # When specified, will wait for either available status for state present  Unfortunately this is ignored for delete action
    wait_timeout: ${7:320}                                                 # Used in conjunction with wait  Number of seconds to wait for status  Unfortunately this is ignored for delete actions du
    route_table_ids: ${8:value}                                            # List of one or more route table ids to attach to the endpoint  A route is added to the route table with the destination 
    vpc_endpoint_id: ${9:value}                                            # One or more vpc endpoint ids to remove from the AWS account
    client_token: ${10:value}                                              # Optional client token to ensure idempotency
    debug_botocore_endpoint_logs: ${11:false}                              # Use a botocore endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, o
    ec2_url: ${12:value}                                                   # Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints)  Ignored for module
    aws_secret_key: ${13:value}                                            # AWS secret key  If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment va
    aws_access_key: ${14:value}                                            # AWS access key  If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variabl
    security_token: ${15:value}                                            # AWS STS security token  If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable i
    validate_certs: ${16:True}                                             # When set to "no", SSL certificates will not be validated for boto versions >= 2 6 0 
    profile: ${17:value}                                                   # Uses a boto profile  Only works with boto >= 2 24 0 
    region: ${18:value}                                                    # The AWS region to use  If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is 
