# -*- mode: snippet -*-
# name: Manage cache snapshots in Amazon Elasticache.
# prefix: elasticache_snapshot_snippet
# key: ticache_snapshot
# group: ansible
# --

- name: ${0:Manage cache snapshots in Amazon Elasticache.}
  elasticache_snapshot:                                                    
    name: ${1:The name of the snapshot we want to create, copy, delete}    #
    state: ${2$$(yas-choose-value '("present" "absent" "copy"))}           # choices: present;absent;copy  Actions that will create, destroy, or copy a snapshot 
    replication_id: ${3:value}                                             # The name of the existing replication group to make the snapshot 
    cluster_id: ${4:value}                                                 # The name of an existing cache cluster in the replication group to make the snapshot 
    target: ${5:value}                                                     # The name of a snapshot copy
    bucket: ${6:value}                                                     # The s3 bucket to which the snapshot is exported
    debug_botocore_endpoint_logs: ${7:false}                               # Use a botocore endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, o
    ec2_url: ${8:value}                                                    # Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints)  Ignored for module
    aws_secret_key: ${9:value}                                             # AWS secret key  If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment va
    aws_access_key: ${10:value}                                            # AWS access key  If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variabl
    security_token: ${11:value}                                            # AWS STS security token  If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable i
    validate_certs: ${12:True}                                             # When set to "no", SSL certificates will not be validated for boto versions >= 2 6 0 
    profile: ${13:value}                                                   # Uses a boto profile  Only works with boto >= 2 24 0 
    region: ${14:value}                                                    # The AWS region to use  If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is 
