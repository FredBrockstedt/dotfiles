# -*- mode: snippet -*-
# name: Update an IAM Password Policy
# prefix: iam_password_policy_snippet
# key: m_password_policy
# group: ansible
# --

- name: ${0:Update an IAM Password Policy}
  iam_password_policy:                                                     
    state: ${1$$(yas-choose-value '("present" "absent"))}                  # Specifies the overall state of the password policy 
    min_pw_length: ${2:6}                                                  # Minimum password length 
    require_symbols: ${3:False}                                            # Require symbols in password 
    require_numbers: ${4:False}                                            # Require numbers in password 
    require_uppercase: ${5:False}                                          # Require uppercase letters in password 
    require_lowercase: ${6:False}                                          # Require lowercase letters in password 
    allow_pw_change: ${7:False}                                            # Allow users to change their password 
    pw_max_age: ${8:0}                                                     # Maximum age for a password in days  When this option is 0 then passwords do not expire automatically 
    pw_reuse_prevent: ${9:0}                                               # Prevent re-use of passwords 
    pw_expire: ${10:False}                                                 # Prevents users from change an expired password 
    debug_botocore_endpoint_logs: ${11:false}                              # Use a botocore endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, o
    ec2_url: ${12:value}                                                   # Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints)  Ignored for module
    aws_secret_key: ${13:value}                                            # AWS secret key  If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment va
    aws_access_key: ${14:value}                                            # AWS access key  If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variabl
    security_token: ${15:value}                                            # AWS STS security token  If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable i
    validate_certs: ${16:True}                                             # When set to "no", SSL certificates will not be validated for boto versions >= 2 6 0 
    profile: ${17:value}                                                   # Uses a boto profile  Only works with boto >= 2 24 0 
    region: ${18:value}                                                    # The AWS region to use  If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is 
