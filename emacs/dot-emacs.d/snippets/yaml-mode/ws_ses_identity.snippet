# -*- mode: snippet -*-
# name: Manages SES email and domain identity
# prefix: aws_ses_identity_snippet
# key: ws_ses_identity
# group: ansible
# --

- name: ${0:Manages SES email and domain identity}
  aws_ses_identity:                                                        
    identity: ${1:This is the email address or domain to verify / delete}  # If this contains an '@' then it will be considered an email  Otherwise it will be considered a domain 
    state: ${2$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  W h e t h e r   t o   c r e a t e ( o r   u p d a t e )   o r   d e l e t e   t h e   i d e n t
    bounce_notifications: ${3:value}                                       # Setup the SNS topic used to report bounce notifications  If omitted, bounce notifications will not be delivered to a SNS
    complaint_notifications: ${4:value}                                    # Setup the SNS topic used to report complaint notifications  If omitted, complaint notifications will not be delivered to
    delivery_notifications: ${5:value}                                     # Setup the SNS topic used to report delivery notifications  If omitted, delivery notifications will not be delivered to a
    feedback_forwarding: ${6:True}                                         # Whether or not to enable feedback forwarding  This can only be false if both I(bounce_notifications) and I(complaint_not
    debug_botocore_endpoint_logs: ${7:false}                               # Use a botocore endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, o
    ec2_url: ${8:value}                                                    # Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints)  Ignored for module
    aws_secret_key: ${9:value}                                             # AWS secret key  If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment va
    aws_access_key: ${10:value}                                            # AWS access key  If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variabl
    security_token: ${11:value}                                            # AWS STS security token  If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable i
    validate_certs: ${12:True}                                             # When set to "no", SSL certificates will not be validated for boto versions >= 2 6 0 
    profile: ${13:value}                                                   # Uses a boto profile  Only works with boto >= 2 24 0 
    region: ${14:value}                                                    # The AWS region to use  If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is 
