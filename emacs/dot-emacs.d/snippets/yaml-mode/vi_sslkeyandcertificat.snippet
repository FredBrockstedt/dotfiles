# -*- mode: snippet -*-
# name: Module for setup of SSLKeyAndCertificate Avi RESTful Object
# prefix: avi_sslkeyandcertificate_snippet
# key: vi_sslkeyandcertificat
# group: ansible
# --

- name: ${0:Module for setup of SSLKeyAndCertificate Avi RESTful Object}
  avi_sslkeyandcertificate:                                                
    certificate: ${1:Sslcertificate settings for sslkeyandcertificate}     #
    name: ${2:Name of the object}                                          #
    state: ${3$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  The state that should be applied on the entity 
    avi_api_update_method: ${4$$(yas-choose-value '("put" "patch"))}       # choices: put;patch  Default method for object update is HTTP PUT  Setting to patch will override that behavior to use HT
    avi_api_patch_op: ${5$$(yas-choose-value '("add" "replace" "delete"))} # choices: add;replace;delete  Patch operation to use when using avi_api_update_method as patch 
    ca_certs: ${6:value}                                                   # Ca certificates in certificate chain 
    certificate_base64: ${7:value}                                         # States if the certificate is base64 encoded  Field introduced in 18 1 2, 18 2 1  Default value when not specified in API
    certificate_management_profile_ref: ${8:value}                         # It is a reference to an object of type certificatemanagementprofile 
    created_by: ${9:value}                                                 # Creator name 
    dynamic_params: ${10:value}                                            # Dynamic parameters needed for certificate management profile 
    enckey_base64: ${11:value}                                             # Encrypted private key corresponding to the private key (e g  Those generated by an hsm such as thales nshield) 
    enckey_name: ${12:value}                                               # Name of the encrypted private key (e g  Those generated by an hsm such as thales nshield) 
    format: ${13:value}                                                    # Format of the key/certificate file  Enum options - SSL_PEM, SSL_PKCS12  Field introduced in 18 1 2, 18 2 1  Default valu
    hardwaresecuritymodulegroup_ref: ${14:value}                           # It is a reference to an object of type hardwaresecuritymodulegroup 
    key: ${15:value}                                                       # Private key 
    key_base64: ${16:value}                                                # States if the private key is base64 encoded  Field introduced in 18 1 2, 18 2 1  Default value when not specified in API
    key_params: ${17:value}                                                # Sslkeyparams settings for sslkeyandcertificate 
    key_passphrase: ${18:value}                                            # Passphrase used to encrypt the private key  Field introduced in 18 1 2, 18 2 1 
    status: ${19:value}                                                    # Enum options - ssl_certificate_finished, ssl_certificate_pending  Default value when not specified in API or module is i
    tenant_ref: ${20:value}                                                # It is a reference to an object of type tenant 
    type: ${21:value}                                                      # Enum options - ssl_certificate_type_virtualservice, ssl_certificate_type_system, ssl_certificate_type_ca 
    url: ${22:value}                                                       # Avi controller URL of the object 
    uuid: ${23:value}                                                      # Unique object identifier of the object 
    controller: ${24:}                                                     # IP address or hostname of the controller  The default value is the environment variable C(AVI_CONTROLLER) 
    username: ${25:}                                                       # Username used for accessing Avi controller  The default value is the environment variable C(AVI_USERNAME) 
    password: ${26:}                                                       # Password of Avi user in Avi controller  The default value is the environment variable C(AVI_PASSWORD) 
    tenant: ${27:admin}                                                    # Name of tenant used for all Avi API calls and context of object 
    tenant_uuid: ${28:}                                                    # UUID of tenant used for all Avi API calls and context of object 
    api_version: ${{29:16}                                                 #4 4} # not required  Avi API version of to use for Avi API and objects 
    avi_credentials: ${30:value}                                           # Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details 
    api_context: ${31:value}                                               # Avi API context that includes current session ID and CSRF Token  This allows user to perform single login and re-use the
    avi_disable_session_cache_as_fact: ${32:value}                         # It disables avi session information to be cached as a fact 
