# -*- mode: snippet -*-
# name: Manages port forwarding rules on Apache CloudStack based clouds.
# prefix: cs_portforward_snippet
# key: cs_portforward
# group: ansible
# --

- name: ${0:Manages port forwarding rules on Apache CloudStack based clouds.}
  cs_portforward:                                                          
    ip_address: ${1:Public IP address the rule is assigned to}             #
    public_port: ${2:Start public port for this rule}                      #
    private_port: ${3:Start private port for this rule}                    #
    vm: ${4:value}                                                         # Name of virtual machine which we make the port forwarding rule for  Required if I(state=present) 
    state: ${5$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  State of the port forwarding rule 
    protocol: ${6$$(yas-choose-value '("tcp" "udp"))}                      # choices: tcp;udp  Protocol of the port forwarding rule 
    public_end_port: ${7:value}                                            # End public port for this rule  If not specified equal I(public_port) 
    private_end_port: ${8:value}                                           # End private port for this rule  If not specified equal I(private_port) 
    open_firewall: ${9:False}                                              # Whether the firewall rule for public port should be created, while creating the new rule  Use M(cs_firewall) for managin
    vm_guest_ip: ${10:value}                                               # VM guest NIC secondary IP address for the port forwarding rule 
    network: ${11:value}                                                   # Name of the network 
    vpc: ${12:value}                                                       # Name of the VPC 
    domain: ${13:value}                                                    # Domain the I(vm) is related to 
    account: ${14:value}                                                   # Account the I(vm) is related to 
    project: ${15:value}                                                   # Name of the project the I(vm) is located in 
    zone: ${16:value}                                                      # Name of the zone in which the virtual machine is in  If not set, default zone is used 
    poll_async: ${17:True}                                                 # Poll async jobs until job has finished 
    tags: ${18:value}                                                      # List of tags  Tags are a list of dictionaries having keys I(key) and I(value)  To delete all tags, set a empty list e g 
    api_key: ${19:value}                                                   # API key of the CloudStack API  If not given, the C(CLOUDSTACK_KEY) env variable is considered  As the last option, the v
    api_secret: ${20:value}                                                # Secret key of the CloudStack API  If not set, the C(CLOUDSTACK_SECRET) env variable is considered  As the last option, t
    api_url: ${21:value}                                                   # URL of the CloudStack API e g  https://cloud example com/client/api  If not given, the C(CLOUDSTACK_ENDPOINT) env variab
    api_http_method: ${22$$(yas-choose-value '("get" "post"))}             # choices: get;post  HTTP method used to query the API endpoint  If not given, the C(CLOUDSTACK_METHOD) env variable is co
    api_timeout: ${23:value}                                               # HTTP timeout in seconds  If not given, the C(CLOUDSTACK_TIMEOUT) env variable is considered  As the last option, the val
    api_region: ${24:cloudstack}                                           # Name of the ini section in the C(cloustack ini) file  If not given, the C(CLOUDSTACK_REGION) env variable is considered 
