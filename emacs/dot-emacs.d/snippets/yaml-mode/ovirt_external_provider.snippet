# -*- mode: snippet -*-
# name: Module to manage external providers in oVirt/RHV
# prefix: ovirt_external_provider_snippet
# key: ovirt_external_provider
# group: ansible
# --

- name: ${0:Module to manage external providers in oVirt/RHV}
  ovirt_external_provider:                                                 
    auth: ${1:Dictionary with values needed to create HTTP/HTTPS connection to oVirt:}#
    name: ${2:value}                                                       # Name of the external provider to manage 
    state: ${3$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  Should the external be present or absent When you are using absent for I(os_volume), you need t
    description: ${4:value}                                                # Description of the external provider 
    type: ${5$$(yas-choose-value '("os_image" "network" "os_volume" "foreman"))}# choices: os_image;network;os_volume;foreman  Type of the external provider 
    url: ${6:value}                                                        # URL where external provider is hosted  Applicable for those types: I(os_image), I(os_volume), I(network) and I(foreman) 
    username: ${7:value}                                                   # Username to be used for login to external provider  Applicable for all types 
    password: ${8:value}                                                   # Password of the user specified in C(username) parameter  Applicable for all types 
    tenant_name: ${9:value}                                                # Name of the tenant  Applicable for those types: I(os_image), I(os_volume) and I(network) 
    authentication_url: ${10:value}                                        # Keystone authentication URL of the openstack provider  Applicable for those types: I(os_image), I(os_volume) and I(netwo
    data_center: ${11:value}                                               # Name of the data center where provider should be attached  Applicable for those type: I(os_volume) 
    read_only: ${12:value}                                                 # Specify if the network should be read only  Applicable if C(type) is I(network) 
    network_type: ${13$$(yas-choose-value '("external" "neutron"))}        # choices: external;neutron  Type of the external network provider either external (for example OVN) or neutron  Applicabl
    authentication_keys: ${14:[]}                                          # List of authentication keys  Each key is represented by dict like {'uuid': 'our-uuid', 'value': 'YourSecretValue=='\} Wh
    wait: ${15:True}                                                       # C(yes) if the module should wait for the entity to get into desired state 
    fetch_nested: ${16:value}                                              # If I(True) the module will fetch additional data from the API  It will fetch IDs of the VMs disks, snapshots, etc  User 
    nested_attributes: ${17:value}                                         # Specifies list of the attributes which should be fetched from the API  This parameter apply only when C(fetch_nested) is
    timeout: ${18:180}                                                     # The amount of time in seconds the module should wait for the instance to get into desired state 
    poll_interval: ${19:3}                                                 # Number of the seconds the module waits until another poll request on entity status is sent 
