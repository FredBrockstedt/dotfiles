# -*- mode: snippet -*-
# name: Change an owner of PostgreSQL database object
# prefix: postgresql_owner_snippet
# key: postgresql_owner
# group: ansible
# --

- name: ${0:Change an owner of PostgreSQL database object}
  postgresql_owner:                                                        
    new_owner: ${1:Role (user/group) to set as an I(obj_name) owner}       #
    obj_type: ${2$$(yas-choose-value '("database" "function" "matview" "sequence" "schema" "table" "tablespace" "view"))}# Type of a database object  Mutually exclusive with I(reassign_owned_by) 
    obj_name: ${3:value}                                                   # Name of a database object to change ownership  Mutually exclusive with I(reassign_owned_by) 
    reassign_owned_by: ${4:value}                                          # The list of role names  The ownership of all the objects within the current database, and of all shared objects (databas
    fail_on_role: ${5:True}                                                # If C(yes), fail when I(reassign_owned_by) role does not exist  Otherwise just warn and continue  Mutually exclusive with
    db: ${6:value}                                                         # Name of database to connect to 
    session_role: ${7:value}                                               # Switch to session_role after connecting  The specified session_role must be a role that the current login_user is a memb
    login_user: ${8:postgres}                                              # The username used to authenticate with 
    login_password: ${9:value}                                             # The password used to authenticate with 
    login_host: ${10:value}                                                # Host running the database 
    login_unix_socket: ${11:value}                                         # Path to a Unix domain socket for local connections 
    port: ${12:5432}                                                       # Database port to connect to 
    ssl_mode: ${13$$(yas-choose-value '("allow" "disable" "prefer" "require" "verify-ca" "verify-full"))}# choices: allow;disable;prefer;require;verify-ca;verify-full  Determines whether or with wh
    ca_cert: ${14:value}                                                   # Specifies the name of a file containing SSL certificate authority (CA) certificate(s)  If the file exists, the server's 
