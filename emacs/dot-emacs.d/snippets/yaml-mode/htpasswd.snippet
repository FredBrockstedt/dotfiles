# -*- mode: snippet -*-
# name: manage user files for basic authentication
# prefix: htpasswd_snippet
# key: htpasswd
# group: ansible
# --

- name: ${0:manage user files for basic authentication}
  htpasswd:                                                                
    path: ${1:Path to the file that contains the usernames and passwords}  #
    name: ${2:User name to add or remove}                                  #
    password: ${3:value}                                                   # Password associated with user  Must be specified if user does not exist yet 
    crypt_scheme: ${4$$(yas-choose-value '("apr_md5_crypt" "des_crypt" "ldap_sha1" "plaintext"))}# choices: apr_md5_crypt;des_crypt;ldap_sha1;plaintext  Encryption scheme to be used   As well as th
    state: ${5$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  Whether the user entry should be present or not
    create: ${6:true}                                                      # Used with C(state=present)  If specified, the file will be created if it does not already exist  If set to "no", will fa
    mode: ${7:value}                                                       # The permissions the resulting file or directory should have  For those used to I(/usr/bin/chmod) remember that modes are
    owner: ${8:value}                                                      # Name of the user that should own the file/directory, as would be fed to I(chown) 
    group: ${9:value}                                                      # Name of the group that should own the file/directory, as would be fed to I(chown) 
    seuser: ${10:value}                                                    # The user part of the SELinux file context  By default it uses the C(system) policy, where applicable  When set to C(_def
    serole: ${11:value}                                                    # The role part of the SELinux file context  When set to C(_default), it will use the C(role) portion of the policy if ava
    setype: ${12:value}                                                    # The type part of the SELinux file context  When set to C(_default), it will use the C(type) portion of the policy if ava
    selevel: ${13:s0}                                                      # The level part of the SELinux file context  This is the MLS/MCS attribute, sometimes known as the C(range)  When set to 
    unsafe_writes: ${14:False}                                             # Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file  By default
    attributes: ${15:value}                                                # The attributes the resulting file or directory should have  To get supported flags look at the man page for I(chattr) on
