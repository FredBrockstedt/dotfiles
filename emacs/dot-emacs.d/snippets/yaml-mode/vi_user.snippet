# -*- mode: snippet -*-
# name: Avi User Module
# prefix: avi_user_snippet
# key: vi_user
# group: ansible
# --

- name: ${0:Avi User Module}
  avi_user:                                                                
    name: ${1:Full name of the user}                                       #
    obj_username: ${2:Name that the user will supply when signing into Avi Vantage, such as jdoe or jdoe@avinetworks}#com 
    obj_password: ${3:You may either enter a case-sensitive password in this field for the new or existing user}#
    state: ${4$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  The state that should be applied on the entity 
    email: ${5:value}                                                      # Email address of the user  This field is used when a user loses their password and requests to have it reset  See Passwo
    access: ${6:value}                                                     # Access settings (write, read, or no access) for each type of resource within Vantage 
    is_superuser: ${7:value}                                               # If the user will need to have the same privileges as the admin account, set it to true 
    is_active: ${8:value}                                                  # Activates the current user account 
    avi_api_update_method: ${9$$(yas-choose-value '("post" "put" "patch"))}# choices: post;put;patch  Default method for object update is HTTP PUT  Setting to patch will override that behavior to u
    avi_api_patch_op: ${10$$(yas-choose-value '("add" "replace" "delete"))}# choices: add;replace;delete  Patch operation to use when using avi_api_update_method as patch 
    user_profile_ref: ${11:value}                                          # Refer user profile  This can also be full URI same as it comes in response payload
    default_tenant_ref: ${12:/api/tenant?name=admin}                       # Default tenant reference  This can also be full URI same as it comes in response payload
    controller: ${13:}                                                     # IP address or hostname of the controller  The default value is the environment variable C(AVI_CONTROLLER) 
    username: ${14:}                                                       # Username used for accessing Avi controller  The default value is the environment variable C(AVI_USERNAME) 
    password: ${15:}                                                       # Password of Avi user in Avi controller  The default value is the environment variable C(AVI_PASSWORD) 
    tenant: ${16:admin}                                                    # Name of tenant used for all Avi API calls and context of object 
    tenant_uuid: ${17:}                                                    # UUID of tenant used for all Avi API calls and context of object 
    api_version: ${{18:16}                                                 #4 4} # not required  Avi API version of to use for Avi API and objects 
    avi_credentials: ${19:value}                                           # Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details 
    api_context: ${20:value}                                               # Avi API context that includes current session ID and CSRF Token  This allows user to perform single login and re-use the
    avi_disable_session_cache_as_fact: ${21:value}                         # It disables avi session information to be cached as a fact 
