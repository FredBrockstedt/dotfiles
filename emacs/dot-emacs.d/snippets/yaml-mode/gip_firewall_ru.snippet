# -*- mode: snippet -*-
# name: Manage AFM Firewall rules
# prefix: bigip_firewall_rule_snippet
# key: gip_firewall_ru
# group: ansible
# --

- name: ${0:Manage AFM Firewall rules}
  bigip_firewall_rule:                                                     
    name: ${1:Specifies the name of the rule}                              #
    parent_policy: ${2:value}                                              # The policy which contains the rule to be managed  One of either C(parent_policy) or C(parent_rule_list) is required 
    parent_rule_list: ${3:value}                                           # The rule list which contains the rule to be managed  One of either C(parent_policy) or C(parent_rule_list) is required 
    action: ${4$$(yas-choose-value '("accept" "drop" "reject" "accept-decisively"))}# choices: accept;drop;reject;accept-decisively  Specifies the action for the firewall rule  When C(accept), allo
    status: ${5$$(yas-choose-value '("enabled" "disabled" "scheduled"))}   # choices: enabled;disabled;scheduled  Indicates the activity state of the rule or rule list  When C(disabled), specifies 
    schedule: ${6:value}                                                   # Specifies a schedule for the firewall rule  You configure schedules to define days and times when the firewall rule is m
    description: ${7:value}                                                # The rule description 
    irule: ${8:value}                                                      # Specifies an iRule that is applied to the firewall rule  An iRule can be started when the firewall rule matches traffic 
    protocol: ${9:value}                                                   # Specifies the protocol to which the rule applies  Protocols may be specified by either their name or numeric value  A sp
    source: ${10:value}                                                    # Specifies packet sources to which the rule applies  Leaving this field blank applies the rule to all addresses and all p
    destination: ${11:value}                                               # Specifies packet destinations to which the rule applies  Leaving this field blank applies the rule to all addresses and 
    logging: ${12:value}                                                   # Specifies whether logging is enabled or disabled for the firewall rule  When creating a new rule, if this parameter is n
    rule_list: ${13:value}                                                 # Specifies an existing rule list to use in the rule  This parameter is mutually exclusive with many of the other individu
    icmp_message: ${14:value}                                              # Specifies the Internet Control Message Protocol (ICMP) or ICMPv6 message C(type) and C(code) that the rule uses  This pa
    partition: ${15:Common}                                                # Device partition to manage resources on 
    state: ${16$$(yas-choose-value '("present" "absent"))}                 # choices: present;absent  When C(state) is C(present), ensures that the rule exists  When C(state) is C(absent), ensures 
    provider: ${17:value}                                                  # A dict object containing connection details 
