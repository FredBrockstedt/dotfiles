# -*- mode: snippet -*-
# name: Interacts with webservices
# prefix: win_uri_snippet
# key: win_ur
# group: ansible
# --

- name: ${0:Interacts with webservices}
  win_uri:                                                                 
    url: ${1:Supports FTP" " HTTP or HTTPS URLs in the form of (ftp$$(yas-choose-value '("http"))https)://host}#domain:port/path 
    method: ${2:GET}                                                       # The HTTP Method of the request or response 
    content_type: ${3:value}                                               # Sets the "Content-Type" header 
    body: ${4:value}                                                       # The body of the HTTP request/response to the web service 
    dest: ${5:value}                                                       # Output the response body to a file 
    creates: ${6:value}                                                    # A filename, when it already exists, this step will be skipped 
    removes: ${7:value}                                                    # A filename, when it does not exist, this step will be skipped 
    return_content: ${8:False}                                             # Whether or not to return the body of the response as a "content" key in the dictionary result  If the reported Content-t
    status_code: ${9:[200]}                                                # A valid, numeric, HTTP status code that signifies success of the request  Can also be comma separated list of status cod
    url_username: ${10:value}                                              # The username to use for authentication  Was originally called I(user) but was changed to I(url_username) in Ansible 2 9 
    url_password: ${11:value}                                              # The password for I(url_username)  Was originally called I(password) but was changed to I(url_password) in Ansible 2 9 
    follow_redirects: ${12$$(yas-choose-value '("all" "none" "safe"))}     # choices: all;none;safe  Whether or the module should follow redirects  C(all) will follow all redirect  C(none) will not
    maximum_redirection: ${13:50}                                          # Specify how many times the module will redirect a connection to an alternative URI before the connection fails  If set t
    client_cert: ${14:value}                                               # The path to the client certificate ( pfx) that is used for X509 authentication  This path can either be the path to the 
    client_cert_password: ${15:value}                                      # The password for I(client_cert) if the cert is password protected 
    use_proxy: ${16:True}                                                  # If C(no), it will not use the proxy defined in IE for the current user 
    proxy_url: ${17:value}                                                 # An explicit proxy to use for the request  By default, the request will use the IE defined proxy unless I(use_proxy) is s
    proxy_username: ${18:value}                                            # The username to use for proxy authentication 
    proxy_password: ${19:value}                                            # The password for I(proxy_username) 
    headers: ${20:value}                                                   # Extra headers to set on the request  This should be a dictionary where the key is the header name and the value is the v
    http_agent: ${21:ansible-httpget}                                      # Header to identify as, generally appears in web server logs  This is set to the C(User-Agent) header on a HTTP request 
    timeout: ${22:30}                                                      # Specifies how long the request can be pending before it times out (in seconds)  Set to C(0) to specify an infinite timeo
    validate_certs: ${23:True}                                             # If C(no), SSL certificates will not be validated  This should only be used on personally controlled sites using self-sig
    force_basic_auth: ${24:False}                                          # By default the authentication header is only sent when a webservice responses to an initial request with a 401 status  S
    use_default_credential: ${25:False}                                    # Uses the current user's credentials when authenticating with a server protected with C(NTLM), C(Kerberos), or C(Negotiat
    proxy_use_default_credential: ${26:False}                              # Uses the current user's credentials when authenticating with a proxy host protected with C(NTLM), C(Kerberos), or C(Nego
