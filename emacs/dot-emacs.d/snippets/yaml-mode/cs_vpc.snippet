# -*- mode: snippet -*-
# name: Manages VPCs on Apache CloudStack based clouds.
# prefix: cs_vpc_snippet
# key: cs_vpc
# group: ansible
# --

- name: ${0:Manages VPCs on Apache CloudStack based clouds.}
  cs_vpc:                                                                  
    name: ${1:Name of the VPC}                                             #
    display_text: ${2:value}                                               # Display text of the VPC  If not set, I(name) will be used for creating 
    cidr: ${3:value}                                                       # CIDR of the VPC, e g  10 1 0 0/16 All VPC guest networks' CIDRs must be within this CIDR  Required on I(state=present) 
    network_domain: ${4:value}                                             # Network domain for the VPC  All networks inside the VPC will belong to this domain  Only considered while creating the V
    vpc_offering: ${5:value}                                               # Name of the VPC offering  If not set, default VPC offering is used 
    clean_up: ${6:value}                                                   # Whether to redeploy a VPC router or not when I(state=restarted)
    state: ${7$$(yas-choose-value '("present" "absent" "stopped" "restarted"))}# choices: present;absent;stopped;restarted  State of the VPC  The state C(present) creates a started VPC  The state C
    domain: ${8:value}                                                     # Domain the VPC is related to 
    account: ${9:value}                                                    # Account the VPC is related to 
    project: ${10:value}                                                   # Name of the project the VPC is related to 
    zone: ${11:value}                                                      # Name of the zone  If not set, default zone is used 
    tags: ${12:value}                                                      # List of tags  Tags are a list of dictionaries having keys I(key) and I(value)  For deleting all tags, set an empty list 
    poll_async: ${13:True}                                                 # Poll async jobs until job has finished 
    api_key: ${14:value}                                                   # API key of the CloudStack API  If not given, the C(CLOUDSTACK_KEY) env variable is considered  As the last option, the v
    api_secret: ${15:value}                                                # Secret key of the CloudStack API  If not set, the C(CLOUDSTACK_SECRET) env variable is considered  As the last option, t
    api_url: ${16:value}                                                   # URL of the CloudStack API e g  https://cloud example com/client/api  If not given, the C(CLOUDSTACK_ENDPOINT) env variab
    api_http_method: ${17$$(yas-choose-value '("get" "post"))}             # choices: get;post  HTTP method used to query the API endpoint  If not given, the C(CLOUDSTACK_METHOD) env variable is co
    api_timeout: ${18:value}                                               # HTTP timeout in seconds  If not given, the C(CLOUDSTACK_TIMEOUT) env variable is considered  As the last option, the val
    api_region: ${19:cloudstack}                                           # Name of the ini section in the C(cloustack ini) file  If not given, the C(CLOUDSTACK_REGION) env variable is considered 
