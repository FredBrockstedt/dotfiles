# -*- mode: snippet -*-
# name: Template a file out to a remote server
# prefix: template_snippet
# key: templat
# group: ansible
# --

- name: ${0:Template a file out to a remote server}
  template:                                                                
    src: ${1:Path of a Jinja2 formatted template on the Ansible controller}# This can be a relative or an absolute path  The file must be encoded with C(utf-8) but I(output_encoding) can be used to
    dest: ${2:Location to render the template to on the remote machine}    #
    follow: ${3:False}                                                     # Determine whether symbolic links should be followed  When set to C(yes) symbolic links will be followed, if they exist  
    backup: ${4:False}                                                     # Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered 
    mode: ${5:value}                                                       # The permissions the resulting file or directory should have  For those used to I(/usr/bin/chmod) remember that modes are
    owner: ${6:value}                                                      # Name of the user that should own the file/directory, as would be fed to I(chown) 
    group: ${7:value}                                                      # Name of the group that should own the file/directory, as would be fed to I(chown) 
    seuser: ${8:value}                                                     # The user part of the SELinux file context  By default it uses the C(system) policy, where applicable  When set to C(_def
    serole: ${9:value}                                                     # The role part of the SELinux file context  When set to C(_default), it will use the C(role) portion of the policy if ava
    setype: ${10:value}                                                    # The type part of the SELinux file context  When set to C(_default), it will use the C(type) portion of the policy if ava
    selevel: ${11:s0}                                                      # The level part of the SELinux file context  This is the MLS/MCS attribute, sometimes known as the C(range)  When set to 
    unsafe_writes: ${12:False}                                             # Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file  By default
    attributes: ${13:value}                                                # The attributes the resulting file or directory should have  To get supported flags look at the man page for I(chattr) on
    newline_sequence: ${14$$(yas-choose-value '("\n" "\r" "\r\n"))}        # choices: \n;\r;\r\n  Specify the newline sequence to use for templating files 
    block_start_string: ${15:{%}                                           # The string marking the beginning of a block 
    block_end_string: ${16:%\}}                                            # The string marking the end of a block 
    variable_start_string: ${17:{{}                                        # The string marking the beginning of a print statement 
    variable_end_string: ${18:\}\}}                                        # The string marking the end of a print statement 
    trim_blocks: ${19:True}                                                # Determine when newlines should be removed from blocks  When set to C(yes) the first newline after a block is removed (bl
    lstrip_blocks: ${20:False}                                             # Determine when leading spaces and tabs should be stripped  When set to C(yes) leading spaces and tabs are stripped from 
    force: ${21:True}                                                      # Determine when the file is being transferred if the destination already exists  When set to C(yes), replace the remote f
    output_encoding: ${22:utf-8}                                           # Overrides the encoding used to write the template file defined by C(dest)  It defaults to C(utf-8), but any encoding sup
    validate: ${23:value}                                                  # The validation command to run before copying into place  The path to the file to validate is passed in via '%s' which mu
