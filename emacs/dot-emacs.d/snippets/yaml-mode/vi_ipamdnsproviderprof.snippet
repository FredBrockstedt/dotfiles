# -*- mode: snippet -*-
# name: Module for setup of IpamDnsProviderProfile Avi RESTful Object
# prefix: avi_ipamdnsproviderprofile_snippet
# key: vi_ipamdnsproviderprof
# group: ansible
# --

- name: ${0:Module for setup of IpamDnsProviderProfile Avi RESTful Object}
  avi_ipamdnsproviderprofile:                                              
    name: ${1:Name for the ipam/dns provider profile}                      #
    type: ${2:Provider type for the ipam/dns provider profile}             # Enum options - IPAMDNS_TYPE_INFOBLOX, IPAMDNS_TYPE_AWS, IPAMDNS_TYPE_OPENSTACK, IPAMDNS_TYPE_GCP, IPAMDNS_TYPE_INFOBLOX_
    state: ${3$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  The state that should be applied on the entity 
    avi_api_update_method: ${4$$(yas-choose-value '("put" "patch"))}       # choices: put;patch  Default method for object update is HTTP PUT  Setting to patch will override that behavior to use HT
    avi_api_patch_op: ${5$$(yas-choose-value '("add" "replace" "delete"))} # choices: add;replace;delete  Patch operation to use when using avi_api_update_method as patch 
    allocate_ip_in_vrf: ${6:value}                                         # If this flag is set, only allocate ip from networks in the virtual service vrf  Applicable for avi vantage ipam only  Fi
    aws_profile: ${7:value}                                                # Provider details if type is aws 
    azure_profile: ${8:value}                                              # Provider details if type is microsoft azure  Field introduced in 17 2 1 
    custom_profile: ${9:value}                                             # Provider details if type is custom  Field introduced in 17 1 1 
    gcp_profile: ${10:value}                                               # Provider details if type is google cloud 
    infoblox_profile: ${11:value}                                          # Provider details if type is infoblox 
    internal_profile: ${12:value}                                          # Provider details if type is avi 
    oci_profile: ${13:value}                                               # Provider details for oracle cloud  Field introduced in 18 2 1,18 1 3 
    openstack_profile: ${14:value}                                         # Provider details if type is openstack 
    proxy_configuration: ${15:value}                                       # Field introduced in 17 1 1 
    tenant_ref: ${16:value}                                                # It is a reference to an object of type tenant 
    tencent_profile: ${17:value}                                           # Provider details for tencent cloud  Field introduced in 18 2 3 
    url: ${18:value}                                                       # Avi controller URL of the object 
    uuid: ${19:value}                                                      # Uuid of the ipam/dns provider profile 
    controller: ${20:}                                                     # IP address or hostname of the controller  The default value is the environment variable C(AVI_CONTROLLER) 
    username: ${21:}                                                       # Username used for accessing Avi controller  The default value is the environment variable C(AVI_USERNAME) 
    password: ${22:}                                                       # Password of Avi user in Avi controller  The default value is the environment variable C(AVI_PASSWORD) 
    tenant: ${23:admin}                                                    # Name of tenant used for all Avi API calls and context of object 
    tenant_uuid: ${24:}                                                    # UUID of tenant used for all Avi API calls and context of object 
    api_version: ${{25:16}                                                 #4 4} # not required  Avi API version of to use for Avi API and objects 
    avi_credentials: ${26:value}                                           # Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details 
    api_context: ${27:value}                                               # Avi API context that includes current session ID and CSRF Token  This allows user to perform single login and re-use the
    avi_disable_session_cache_as_fact: ${28:value}                         # It disables avi session information to be cached as a fact 
