# -*- mode: snippet -*-
# name: Creates a GCP Subnetwork
# prefix: gcp_compute_subnetwork_snippet
# key: gcp_compute_subnetwork
# group: ansible
# --

- name: ${0:Creates a GCP Subnetwork}
  gcp_compute_subnetwork:                                                  
    ip_cidr_range: ${1:The range of internal addresses that are owned by this subnetwork}# Provide this property when you create the subnetwork  For example, 10 0 0 0/8 or 192 168 0 0/16  Ranges mu
    name: ${2:The name of the resource, provided by the client when initially creating the resource}# The name must be 1-63 characters long, and comply with RFC1035  Specifically, the name must be 
    network: ${3:The network this subnet belongs to}                       # Only networks that are in the distributed mode can have subnetworks  This field represents a link to a Network resource 
    region: ${4:URL of the GCP region for this subnetwork}                 #
    auth_kind: ${5$$(yas-choose-value '("application" "machineaccount" "serviceaccount"))}# The type of credential used 
    state: ${6$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  Whether the given object should exist in GCP
    description: ${7:value}                                                # An optional description of this resource  Provide this property when you create the resource  This field can be set only
    enable_flow_logs: ${8:value}                                           # Whether to enable flow logging for this subnetwork 
    secondary_ip_ranges: ${9:value}                                        # An array of configurations for secondary IP ranges for VM instances contained in this subnetwork  The primary IP of such
    private_ip_google_access: ${10:value}                                  # When enabled, VMs in this subnetwork without external IP addresses can access Google APIs and services by using Private 
    project: ${11:value}                                                   # The Google Cloud Platform project to use 
    service_account_contents: ${12:value}                                  # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it 
    service_account_file: ${13:value}                                      # The path of a Service Account JSON file if serviceaccount is selected as type 
    service_account_email: ${14:value}                                     # An optional service account email address if machineaccount is selected and the user does not wish to use the default em
    scopes: ${15:value}                                                    # Array of scopes to be used 
    env_type: ${16:value}                                                  # Specifies which Ansible environment you're running this module within  This should not be set unless you know what you'r
