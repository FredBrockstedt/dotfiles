# -*- mode: snippet -*-
# name: Manage a Kinesis Stream.
# prefix: kinesis_stream_snippet
# key: kinesis_stream
# group: ansible
# --

- name: ${0:Manage a Kinesis Stream.}
  kinesis_stream:                                                          
    name: ${1:The name of the Kinesis Stream you are managing}             #
    shards: ${2:value}                                                     # The number of shards you want to have with this stream  This is required when state == present
    retention_period: ${3:value}                                           # The default retention period is 24 hours and can not be less than 24 hours  The retention period can be modified during 
    state: ${4$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  Create or Delete the Kinesis Stream 
    wait: ${5:True}                                                        # Wait for operation to complete before returning 
    wait_timeout: ${6:300}                                                 # How many seconds to wait for an operation to complete before timing out 
    tags: ${7:value}                                                       # A dictionary of resource tags of the form: { tag1: value1, tag2: value2 \} 
    encryption_state: ${8$$(yas-choose-value '("enabled" "disabled"))}     # choices: enabled;disabled  Enable or Disable encryption on the Kinesis Stream 
    encryption_type: ${9:KMS}                                              # The type of encryption 
    key_id: ${10:value}                                                    # The GUID or alias for the KMS key 
    debug_botocore_endpoint_logs: ${11:false}                              # Use a botocore endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, o
    ec2_url: ${12:value}                                                   # Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints)  Ignored for module
    aws_secret_key: ${13:value}                                            # AWS secret key  If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment va
    aws_access_key: ${14:value}                                            # AWS access key  If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variabl
    security_token: ${15:value}                                            # AWS STS security token  If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable i
    validate_certs: ${16:True}                                             # When set to "no", SSL certificates will not be validated for boto versions >= 2 6 0 
    profile: ${17:value}                                                   # Uses a boto profile  Only works with boto >= 2 24 0 
    region: ${18:value}                                                    # The AWS region to use  If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is 
