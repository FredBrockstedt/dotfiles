# -*- mode: snippet -*-
# name: Create and delete AWS Transit Gateways.
# prefix: ec2_transit_gateway_snippet
# key: c2_transit_gateway
# group: ansible
# --

- name: ${0:Create and delete AWS Transit Gateways.}
  ec2_transit_gateway:                                                     
    asn: ${1:value}                                                        # A private Autonomous System Number (ASN) for the Amazon side of a BGP session  The range is 64512 to 65534 for 16-bit AS
    auto_associate: ${2:True}                                              # Enable or disable automatic association with the default association route table 
    auto_attach: ${3:False}                                                # Enable or disable automatic acceptance of attachment requests 
    auto_propagate: ${4:True}                                              # Enable or disable automatic propagation of routes to the default propagation route table 
    description: ${5:value}                                                # The description of the transit gateway 
    dns_support: ${6:True}                                                 # Whether to enable AWS DNS support 
    purge_tags: ${7:True}                                                  # Whether to purge existing tags not included with tags argument 
    state: ${8$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  present to ensure resource is created  absent to remove resource 
    tags: ${9:value}                                                       # A dictionary of resource tags
    transit_gateway_id: ${10:value}                                        # The ID of the transit gateway 
    vpn_ecmp_support: ${11:True}                                           # Enable or disable Equal Cost Multipath Protocol support 
    wait: ${12:True}                                                       # Whether to wait for status
    wait_timeout: ${13:300}                                                # number of seconds to wait for status
    debug_botocore_endpoint_logs: ${14:false}                              # Use a botocore endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, o
    ec2_url: ${15:value}                                                   # Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints)  Ignored for module
    aws_secret_key: ${16:value}                                            # AWS secret key  If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment va
    aws_access_key: ${17:value}                                            # AWS access key  If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variabl
    security_token: ${18:value}                                            # AWS STS security token  If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable i
    validate_certs: ${19:True}                                             # When set to "no", SSL certificates will not be validated for boto versions >= 2 6 0 
    profile: ${20:value}                                                   # Uses a boto profile  Only works with boto >= 2 24 0 
    region: ${21:value}                                                    # The AWS region to use  If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is 
