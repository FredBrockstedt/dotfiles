# -*- mode: snippet -*-
# name: Configures vNIC templates on Cisco UCS Manager
# prefix: ucs_vnic_template_snippet
# key: ucs_vnic_templat
# group: ansible
# --

- name: ${0:Configures vNIC templates on Cisco UCS Manager}
  ucs_vnic_template:                                                       
    name: ${1:The name of the vNIC template}                               # This name can be between 1 and 16 alphanumeric characters  You cannot use spaces or any special characters other than - 
    hostname: ${2:IP address or hostname of Cisco UCS Manager}             #
    password: ${3:Password for Cisco UCS Manager authentication}           #
    state: ${4$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  If C(present), will verify vNIC templates are present and will create if needed  If C(absent), 
    description: ${5:value}                                                # A user-defined description of the vNIC template  Enter up to 256 characters  You can use any characters or spaces except
    fabric: ${6$$(yas-choose-value '("A" "B" "A-B" "B-A"))}                # choices: A;B;A-B;B-A  The Fabric ID field specifying the fabric interconnect associated with vNICs created from this tem
    redundancy_type: ${7$$(yas-choose-value '("none" "primary" "secondary"))}# choices: none;primary;secondary  The Redundancy Type used for vNIC redundancy pairs during fabric failover  This can b
    peer_redundancy_template: ${8:value}                                   # The Peer Redundancy Template  The name of the vNIC template sharing a configuration with this template  If the redundanc
    target: ${9:adapter}                                                   # The possible target for vNICs created from this template  The target determines whether or not Cisco UCS Manager automat
    template_type: ${10$$(yas-choose-value '("initial-template" "updating-template"))}# choices: initial-template;updating-template  The Template Type field  This can be one of the following: initi
    vlans_list: ${11:value}                                                # List of VLANs used by the vNIC template  Each list element has the following suboptions: = name   The name of the VLAN (
    cdn_source: ${12$$(yas-choose-value '("vnic-name" "user-defined"))}    # choices: vnic-name;user-defined  CDN Source field  This can be one of the following options: vnic-name - Uses the vNIC t
    cdn_name: ${13:value}                                                  # CDN Name used when cdn_source is set to user-defined 
    mtu: ${14:1500}                                                        # The MTU field  The maximum transmission unit, or packet size, that vNICs created from this vNIC template should use  Ent
    mac_pool: ${15:value}                                                  # The MAC address pool that vNICs created from this vNIC template should use 
    qos_policy: ${16:value}                                                # The quality of service (QoS) policy that vNICs created from this vNIC template should use 
    network_control_policy: ${17:value}                                    # The network control policy that vNICs created from this vNIC template should use 
    pin_group: ${18:value}                                                 # The LAN pin group that vNICs created from this vNIC template should use 
    stats_policy: ${19:default}                                            # The statistics collection policy that vNICs created from this vNIC template should use 
    org_dn: ${20:org-root}                                                 # Org dn (distinguished name)
    username: ${21:admin}                                                  # Username for Cisco UCS Manager authentication 
    port: ${22:value}                                                      # Port number to be used during connection (by default uses 443 for https and 80 for http connection) 
    use_ssl: ${23:True}                                                    # If C(no), an HTTP connection will be used instead of the default HTTPS connection 
    use_proxy: ${24:True}                                                  # If C(no), will not use the proxy as defined by system environment variable 
    proxy: ${25:value}                                                     # If use_proxy is no, specfies proxy to be used for connection  e g  'http://proxy xy z:8080'
