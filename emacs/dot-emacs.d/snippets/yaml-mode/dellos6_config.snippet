# -*- mode: snippet -*-
# name: Manage Dell EMC Networking OS6 configuration sections
# prefix: dellos6_config_snippet
# key: dellos6_config
# group: ansible
# --

- name: ${0:Manage Dell EMC Networking OS6 configuration sections}
  dellos6_config:                                                          
    lines: ${1:value}                                                      # The ordered set of commands that should be configured in the section   The commands must be the exact same commands as f
    parents: ${2:value}                                                    # The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against   If t
    src: ${3:value}                                                        # Specifies the source path to the file that contains the configuration or configuration template to load   The path to th
    before: ${4:value}                                                     # The ordered set of commands to push on to the command stack if a change needs to be made   This allows the playbook desi
    after: ${5:value}                                                      # The ordered set of commands to append to the end of the command stack if a change needs to be made   Just like with I(be
    match: ${6$$(yas-choose-value '("line" "strict" "exact" "none"))}      # choices: line;strict;exact;none  Instructs the module on the way to perform the matching of the set of commands against 
    replace: ${7$$(yas-choose-value '("line" "block"))}                    # choices: line;block  Instructs the module on the way to perform the configuration on the device   If the replace argumen
    update: ${8$$(yas-choose-value '("merge" "check"))}                    # choices: merge;check  The I(update) argument controls how the configuration statements are processed on the remote devic
    save: ${9:false}                                                       # The C(save) argument instructs the module to save the running- config to the startup-config at the conclusion of the mod
    config: ${10:value}                                                    # The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for c
    backup: ${11:false}                                                    # This argument will cause the module to create a full backup of the current C(running-config) from the remote device befo
    backup_options: ${12:value}                                            # This is a dict object containing configurable options related to backup file path  The value of this option is read only
    provider: ${13:value}                                                  # A dict object containing connection details 
