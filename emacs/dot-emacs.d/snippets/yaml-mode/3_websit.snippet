# -*- mode: snippet -*-
# name: Configure an s3 bucket as a website
# prefix: s3_website_snippet
# key: 3_websit
# group: ansible
# --

- name: ${0:Configure an s3 bucket as a website}
  s3_website:                                                              
    name: ${1:Name of the s3 bucket}                                       #
    error_key: ${2:value}                                                  # The object key name to use when a 4XX class error occurs  To remove an error key, set to None 
    redirect_all_requests: ${3:value}                                      # Describes the redirect behavior for every request to this s3 bucket website endpoint
    region: ${4:value}                                                     # AWS region to create the bucket in  If not set then the value of the AWS_REGION and EC2_REGION environment variables are
    state: ${5$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  Add or remove s3 website configuration
    suffix: ${{6:index}                                                    #html} # not required  Suffix that is appended to a request that is for a directory on the website endpoint (e g  if the s
    debug_botocore_endpoint_logs: ${7:false}                               # Use a botocore endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, o
    ec2_url: ${8:value}                                                    # Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints)  Ignored for module
    aws_secret_key: ${9:value}                                             # AWS secret key  If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment va
    aws_access_key: ${10:value}                                            # AWS access key  If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variabl
    security_token: ${11:value}                                            # AWS STS security token  If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable i
    validate_certs: ${12:True}                                             # When set to "no", SSL certificates will not be validated for boto versions >= 2 6 0 
    profile: ${13:value}                                                   # Uses a boto profile  Only works with boto >= 2 24 0 
