# -*- mode: snippet -*-
# name: Manage configuration sections of Ruckus ICX 7000 series switches
# prefix: icx_config_snippet
# key: cx_config
# group: ansible
# --

- name: ${0:Manage configuration sections of Ruckus ICX 7000 series switches}
  icx_config:                                                              
    lines: ${1:value}                                                      # The ordered set of commands that should be configured in the section   The commands must be the exact same commands as f
    parents: ${2:value}                                                    # The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against   If t
    src: ${3:value}                                                        # Specifies the source path to the file that contains the configuration or configuration template to load   The path to th
    before: ${4:value}                                                     # The ordered set of commands to push on to the command stack if a change needs to be made   This allows the playbook desi
    after: ${5:value}                                                      # The ordered set of commands to append to the end of the command stack if a change needs to be made   Just like with I(be
    match: ${6$$(yas-choose-value '("line" "strict" "exact" "none"))}      # choices: line;strict;exact;none  Instructs the module on the way to perform the matching of the set of commands against 
    replace: ${7$$(yas-choose-value '("line" "block"))}                    # choices: line;block  Instructs the module on the way to perform the configuration on the device   If the replace argumen
    multiline_delimiter: ${8:@}                                            # This argument is used when pushing a multiline configuration element to the ICX device   It specifies the character to u
    backup: ${9:false}                                                     # This argument will cause the module to create a full backup of the current C(running-config) from the remote device befo
    defaults: ${10:false}                                                  # This argument specifies whether or not to collect all defaults when getting the remote device running config   When enab
    running_config: ${11:value}                                            # The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for c
    save_when: ${12$$(yas-choose-value '("always" "never" "modified" "changed"))}# choices: always;never;modified;changed  When changes are made to the device running-configuration, the changes are
    diff_against: ${13$$(yas-choose-value '("running" "startup" "intended"))}# choices: running;startup;intended  When using the C(ansible-playbook --diff) command line argument the module can gene
    diff_ignore_lines: ${14:value}                                         # Use this argument to specify one or more lines that should be ignored during the diff   This is used for lines in the co
    intended_config: ${15:value}                                           # The C(intended_config) provides the master configuration that the node should conform to and is used to check the final 
