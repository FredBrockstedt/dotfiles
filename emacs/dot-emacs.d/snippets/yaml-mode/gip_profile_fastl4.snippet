# -*- mode: snippet -*-
# name: Manages Fast L4 profiles
# prefix: bigip_profile_fastl4_snippet
# key: gip_profile_fastl4
# group: ansible
# --

- name: ${0:Manages Fast L4 profiles}
  bigip_profile_fastl4:                                                    
    name: ${1:Specifies the name of the profile}                           #
    parent: ${2:value}                                                     # Specifies the profile from which this profile inherits settings  When creating a new profile, if this parameter is not s
    idle_timeout: ${3:value}                                               # Specifies the length of time that a connection is idle (has no traffic) before the connection is eligible for deletion  
    client_timeout: ${4:value}                                             # Specifies a timeout for Late Binding  This is the time limit for the client to provide the application data required to 
    description: ${5:value}                                                # Description of the profile 
    explicit_flow_migration: ${6:value}                                    # Specifies whether a qualified late-binding connection requires an explicit iRule command to migrate down to ePVA hardwar
    ip_df_mode: ${7$$(yas-choose-value '("pmtu" "preserve" "set" "clear"))}# choices: pmtu;preserve;set;clear  Specifies the Don't Fragment (DF) bit setting in the IP Header of the outgoing TCP pac
    ip_tos_to_client: ${8:value}                                           # Specifies, for IP traffic passing through the system to clients, whether the system modifies the IP type-of-service (ToS
    ip_tos_to_server: ${9:value}                                           # Specifies, for IP traffic passing through the system to back-end servers, whether the system modifies the IP type-of-ser
    ip_ttl_mode: ${10$$(yas-choose-value '("proxy" "preserve" "decrement" "set"))}# choices: proxy;preserve;decrement;set  Specifies the outgoing TCP packet's IP Header TTL mode  When C(proxy), set
    ip_ttl_v4: ${11:value}                                                 # Specifies the outgoing packet's IP Header TTL value for IPv4 traffic  Maximum TTL value that can be specified is 255 
    ip_ttl_v6: ${12:value}                                                 # Specifies the outgoing packet's IP Header TTL value for IPv6 traffic  Maximum TTL value that can be specified is 255 
    keep_alive_interval: ${13:value}                                       # Specifies the keep-alive probe interval, in seconds 
    late_binding: ${14:value}                                              # Enables intelligent selection of a back-end server or pool, using an iRule to make the selection 
    link_qos_to_client: ${15:value}                                        # Specifies, for IP traffic passing through the system to clients, whether the system modifies the link quality-of-service
    link_qos_to_server: ${16:value}                                        # Specifies, for IP traffic passing through the system to back-end servers, whether the system modifies the link quality-o
    loose_close: ${17:value}                                               # When C(yes), specifies, that the system closes a loosely-initiated connection when the system receives the first FIN pac
    loose_initialization: ${18:value}                                      # When C(yes), specifies that the system initializes a connection when it receives any TCP packet, rather that requiring a
    mss_override: ${19:value}                                              # Specifies a maximum segment size (MSS) override for server-side connections  Valid range is 256 to 9162 or 0 to disable 
    reassemble_fragments: ${20:value}                                      # When C(yes), specifies that the system reassembles IP fragments 
    receive_window_size: ${21:value}                                       # Specifies the amount of data the BIG-IP system can accept without acknowledging the server 
    reset_on_timeout: ${22:value}                                          # When C(yes), specifies that the system sends a reset packet (RST) in addition to deleting the connection, when a connect
    rtt_from_client: ${23:value}                                           # When C(yes), specifies that the system uses TCP timestamp options to measure the round-trip time to the client 
    rtt_from_server: ${24:value}                                           # When C(yes), specifies that the system uses TCP timestamp options to measure the round-trip time to the server 
    server_sack: ${25:value}                                               # Specifies whether the BIG-IP system processes Selective ACK (Sack) packets in cookie responses from the server 
    server_timestamp: ${26:value}                                          # Specifies whether the BIG-IP system processes timestamp request packets in cookie responses from the server 
    syn_cookie_mss: ${27:value}                                            # Specifies a value that overrides the SYN cookie maximum segment size (MSS) value in the SYN-ACK packet that is returned 
    tcp_close_timeout: ${28:value}                                         # Specifies the length of time a connection can remain idle before deletion 
    tcp_generate_isn: ${29:value}                                          # When C(yes), specifies that the system generates initial sequence numbers for SYN packets, according to RFC 1948 
    tcp_handshake_timeout: ${30:value}                                     # Specifies the acceptable duration for a TCP handshake, that is, the maximum idle time between a client synchronization (
    tcp_strip_sack: ${31:value}                                            # When C(yes), specifies that the system blocks a TCP selective ACK SackOK option from passing to the server on an initiat
    tcp_time_wait_timeout: ${32:value}                                     # Specifies the number of milliseconds that a connection is in the TIME-WAIT state before closing 
    tcp_timestamp_mode: ${33$$(yas-choose-value '("preserve" "rewrite" "strip"))}# choices: preserve;rewrite;strip  Specifies the action that the system should take on TCP timestamps 
    tcp_wscale_mode: ${34$$(yas-choose-value '("preserve" "rewrite" "strip"))}# choices: preserve;rewrite;strip  Specifies the action that the system should take on TCP windows 
    timeout_recovery: ${35$$(yas-choose-value '("disconnect" "fallback"))} # choices: disconnect;fallback  Specifies how to handle client-timeout errors for Late Binding  Timeout errors may be caus
    partition: ${36:Common}                                                # Device partition to manage resources on 
    state: ${37$$(yas-choose-value '("present" "absent"))}                 # choices: present;absent  When C(present), ensures that the profile exists  When C(absent), ensures the profile is remove
    provider: ${38:value}                                                  # A dict object containing connection details 
