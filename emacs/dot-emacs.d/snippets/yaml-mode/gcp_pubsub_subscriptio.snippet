# -*- mode: snippet -*-
# name: Creates a GCP Subscription
# prefix: gcp_pubsub_subscription_snippet
# key: gcp_pubsub_subscriptio
# group: ansible
# --

- name: ${0:Creates a GCP Subscription}
  gcp_pubsub_subscription:                                                 
    name: ${1:Name of the subscription}                                    #
    topic: ${2:A reference to a Topic resource}                            # This field represents a link to a Topic resource in GCP  It can be specified in two ways  First, you can place a diction
    auth_kind: ${3$$(yas-choose-value '("application" "machineaccount" "serviceaccount"))}# The type of credential used 
    state: ${4$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  Whether the given object should exist in GCP
    labels: ${5:value}                                                     # A set of key/value label pairs to assign to this Subscription 
    push_config: ${6:value}                                                # If push delivery is used with this subscription, this field is used to configure it  An empty pushConfig signifies that 
    ack_deadline_seconds: ${7:value}                                       # This value is the maximum time after a subscriber receives a message before the subscriber should acknowledge the messag
    message_retention_duration: ${8:604800s}                               # How long to retain unacknowledged messages in the subscription's backlog, from the moment a message is published  If ret
    retain_acked_messages: ${9:value}                                      # Indicates whether to retain acknowledged messages  If `true`, then messages are not expunged from the subscription's bac
    expiration_policy: ${10:value}                                         # A policy that specifies the conditions for this subscription's expiration  A subscription is considered active as long a
    project: ${11:value}                                                   # The Google Cloud Platform project to use 
    service_account_contents: ${12:value}                                  # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it 
    service_account_file: ${13:value}                                      # The path of a Service Account JSON file if serviceaccount is selected as type 
    service_account_email: ${14:value}                                     # An optional service account email address if machineaccount is selected and the user does not wish to use the default em
    scopes: ${15:value}                                                    # Array of scopes to be used 
    env_type: ${16:value}                                                  # Specifies which Ansible environment you're running this module within  This should not be set unless you know what you'r
