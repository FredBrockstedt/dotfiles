# -*- mode: snippet -*-
# name: Manages F5 BIG-IP LTM pool members
# prefix: bigip_pool_member_snippet
# key: gip_pool_member
# group: ansible
# --

- name: ${0:Manages F5 BIG-IP LTM pool members}
  bigip_pool_member:                                                       
    state: ${1$$(yas-choose-value '("present" "absent" "enabled" "disabled" "forced_offline"))}# Pool member state 
    pool: ${2:Pool name}                                                   # This pool must exist 
    port: ${3:Pool member port}                                            # This value cannot be changed after it has been set 
    name: ${4:value}                                                       # Name of the node to create, or re-use, when creating a new pool member  This parameter is optional and, if not specified
    partition: ${5:Common}                                                 # Partition to manage resources on 
    address: ${6:value}                                                    # IP address of the pool member  This can be either IPv4 or IPv6  When creating a new pool member, one of either C(address
    fqdn: ${7:value}                                                       # FQDN name of the pool member  This can be any name that is a valid RFC 1123 DNS name  Therefore, the only characters tha
    connection_limit: ${8:value}                                           # Pool member connection limit  Setting this to 0 disables the limit 
    description: ${9:value}                                                # Pool member description 
    rate_limit: ${10:value}                                                # Pool member rate limit (connections-per-second)  Setting this to 0 disables the limit 
    ratio: ${11:value}                                                     # Pool member ratio weight  Valid values range from 1 through 100  New pool members -- unless overridden with this value -
    preserve_node: ${12:value}                                             # When state is C(absent) attempts to remove the node that the pool member references  The node will not be removed if it 
    priority_group: ${13:value}                                            # Specifies a number representing the priority group for the pool member  When adding a new member, the default is 0, mean
    fqdn_auto_populate: ${14:value}                                        # Specifies whether the system automatically creates ephemeral nodes using the IP addresses returned by the resolution of 
    reuse_nodes: ${15:True}                                                # Reuses node definitions if requested 
    monitors: ${16:value}                                                  # Specifies the health monitors that the system currently uses to monitor this resource 
    availability_requirements: ${17:value}                                 # Specifies, if you activate more than one health monitor, the number of health monitors that must receive successful resp
    ip_encapsulation: ${18:value}                                          # Specifies the IP encapsulation using either IPIP (IP encapsulation within IP, RFC 2003) or GRE (Generic Router Encapsula
    aggregate: ${19:value}                                                 # List of pool member definitions to be created, modified or removed  When using C(aggregates) if one of the aggregate def
    replace_all_with: ${20:False}                                          # Remove members not defined in the C(aggregate) parameter  This operation is all or none, meaning that it will stop if th
    provider: ${21:value}                                                  # A dict object containing connection details 
