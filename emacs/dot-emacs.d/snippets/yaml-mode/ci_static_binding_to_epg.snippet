# -*- mode: snippet -*-
# name: Bind static paths to EPGs (fv:RsPathAtt)
# prefix: aci_static_binding_to_epg_snippet
# key: ci_static_binding_to_epg
# group: ansible
# --

- name: ${0:Bind static paths to EPGs (fv:RsPathAtt)}
  aci_static_binding_to_epg:                                               
    host: ${1:IP Address or hostname of APIC resolvable by Ansible control host}#
    password: ${2:The password to use for authentication}                  # This option is mutual exclusive with C(private_key)  If C(private_key) is provided too, it will be used instead 
    private_key: ${3:Either a PEM-formatted private key file or the private key content used for signature-based authentication}# This value also influences the default C(certificate_name) that is 
    tenant: ${4:value}                                                     # Name of an existing tenant 
    ap: ${5:value}                                                         # Name of an existing application network profile, that will contain the EPGs 
    epg: ${6:value}                                                        # The name of the end point group 
    description: ${7:value}                                                # Description for the static path to EPG binding 
    encap_id: ${8:value}                                                   # The encapsulation ID associating the C(epg) with the interface path  This acts as the secondary C(encap_id) when using m
    primary_encap_id: ${9:value}                                           # Determines the primary encapsulation ID associating the C(epg) with the interface path when using micro-segmentation  Ac
    deploy_immediacy: ${10$$(yas-choose-value '("immediate" "lazy"))}      # choices: immediate;lazy  The Deployment Immediacy of Static EPG on PC, VPC or Interface  The APIC defaults to C(lazy) wh
    interface_mode: ${{11$$(yas-choose-value '("802}                       #1p,access,native,regular,tagged,trunk,untagged|} # not required  choices: 802 1p;access;native;regular;tagged;trunk;untag
    interface_type: ${12$$(yas-choose-value '("fex" "port_channel" "switch_port" "vpc"))}# choices: fex;port_channel;switch_port;vpc  The type of interface for the static EPG deployment 
    pod_id: ${13:value}                                                    # The pod number part of the tDn  C(pod_id) is usually an integer below C(10) 
    leafs: ${14:value}                                                     # The switch ID(s) that the C(interface) belongs to  When C(interface_type) is C(switch_port), C(port_channel), or C(fex),
    interface: ${15:value}                                                 # The C(interface) string value part of the tDn  Usually a policy group like C(test-IntPolGrp) or an interface of the foll
    extpaths: ${16:value}                                                  # The C(extpaths) integer value part of the tDn  C(extpaths) is only used if C(interface_type) is C(fex)  Usually somethin
    state: ${17$$(yas-choose-value '("absent" "present" "query"))}         # choices: absent;present;query  Use C(present) or C(absent) for adding or removing  Use C(query) for listing an object or
    port: ${18:value}                                                      # Port number to be used for REST connection  The default value depends on parameter C(use_ssl) 
    username: ${19:admin}                                                  # The username to use for authentication 
    certificate_name: ${20:value}                                          # The X 509 certificate name attached to the APIC AAA user used for signature-based authentication  If a C(private_key) fi
    output_level: ${21$$(yas-choose-value '("debug" "info" "normal"))}     # choices: debug;info;normal  Influence the output of this ACI module  C(normal) means the standard output, incl  C(curren
    timeout: ${22:30}                                                      # The socket level timeout in seconds 
    use_proxy: ${23:True}                                                  # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts 
    use_ssl: ${24:True}                                                    # If C(no), an HTTP connection will be used instead of the default HTTPS connection 
    validate_certs: ${25:True}                                             # If C(no), SSL certificates will not be validated  This should only set to C(no) when used on personally controlled sites
