# -*- mode: snippet -*-
# name: create, update or destroy reverse_proxy location entry in Sophos UTM
# prefix: utm_proxy_location_snippet
# key: utm_proxy_locatio
# group: ansible
# --

- name: ${0:create, update or destroy reverse_proxy location entry in Sophos UTM}
  utm_proxy_location:                                                      
    name: ${1:The name of the object}                                      # Will be used to identify the entry
    utm_host: ${2:The REST Endpoint of the Sophos UTM}                     #
    utm_token: ${3:The token used to identify at the REST-API}             # See U(https://www sophos com/en-us/medialibrary/PDFs/documentation/UTMonAWS/Sophos-UTM-RESTful-API pdf?la=en), Chapter 2
    access_control: ${4$$(yas-choose-value '("0" "1"))}                    # choices: 0;1  whether to activate the access control for the location
    allowed_networks: ${5:REF_NetworkAny}                                  # A list of allowed networks
    auth_profile: ${6:value}                                               # The reference name of the auth profile
    backend: ${7:[]}                                                       # A list of backends that are connected with this location declaration
    be_path: ${8:value}                                                    # The path of the backend
    comment: ${9:value}                                                    # The optional comment string
    denied_networks: ${10:[]}                                              # A list of denied network references
    hot_standby: ${11:False}                                               # Activate hot standby mode
    path: ${12:/}                                                          # The path of the location
    status: ${13:True}                                                     # Whether the location is active or not
    stickysession_id: ${14:ROUTEID}                                        # The stickysession id
    stickysession_status: ${15:False}                                      # Enable the stickysession
    websocket_passthrough: ${16:False}                                     # Enable the websocket passthrough
    headers: ${17:value}                                                   # A dictionary of additional headers to be sent to POST and PUT requests  Is needed for some modules
    utm_port: ${18:4444}                                                   # The port of the REST interface 
    utm_protocol: ${19$$(yas-choose-value '("http" "https"))}              # choices: http;https  The protocol of the REST Endpoint 
    validate_certs: ${20:True}                                             # Whether the REST interface's ssl certificate should be verified or not 
    state: ${21$$(yas-choose-value '("absent" "present"))}                 # choices: absent;present  The desired state of the object  C(present) will create or update an object C(absent) will dele
