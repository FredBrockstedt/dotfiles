# -*- mode: snippet -*-
# name: Manage site-local VRF regions in schema template
# prefix: mso_schema_site_vrf_region_cidr_subnet_snippet
# key: mso_schema_site_vrf_region_cidr_subnet
# group: ansible
# --

- name: ${0:Manage site-local VRF regions in schema template}
  mso_schema_site_vrf_region_cidr_subnet:                                  
    schema: ${1:The name of the schema}                                    #
    site: ${2:The name of the site}                                        #
    template: ${3:The name of the template}                                #
    host: ${4:IP Address or hostname of the ACI Multi Site Orchestrator host}#
    password: ${5:The password to use for authentication}                  # This option is mutual exclusive with C(private_key)  If C(private_key) is provided too, it will be used instead 
    vrf: ${6:value}                                                        # The name of the VRF 
    region: ${7:value}                                                     # The name of the region 
    cidr: ${8:value}                                                       # The IP range of for the region CIDR 
    subnet: ${9:value}                                                     # The IP subnet of this region CIDR 
    zone: ${10:value}                                                      # The name of the zone for the region CIDR subnet 
    state: ${11$$(yas-choose-value '("absent" "present" "query"))}         # choices: absent;present;query  Use C(present) or C(absent) for adding or removing  Use C(query) for listing an object or
    port: ${12:value}                                                      # Port number to be used for the REST connection  The default value depends on parameter `use_ssl` 
    username: ${13:admin}                                                  # The username to use for authentication 
    output_level: ${14$$(yas-choose-value '("debug" "info" "normal"))}     # choices: debug;info;normal  Influence the output of this ACI module  C(normal) means the standard output, incl  C(curren
    timeout: ${15:30}                                                      # The socket level timeout in seconds 
    use_proxy: ${16:True}                                                  # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts 
    use_ssl: ${17:True}                                                    # If C(no), an HTTP connection will be used instead of the default HTTPS connection 
    validate_certs: ${18:True}                                             # If C(no), SSL certificates will not be validated  This should only set to C(no) when used on personally controlled sites
