# -*- mode: snippet -*-
# name: Module for setup of ApplicationProfile Avi RESTful Object
# prefix: avi_applicationprofile_snippet
# key: vi_applicationprof
# group: ansible
# --

- name: ${0:Module for setup of ApplicationProfile Avi RESTful Object}
  avi_applicationprofile:                                                  
    name: ${1:The name of the application profile}                         #
    type: ${2:Specifies which application layer proxy is enabled for the virtual service}# Enum options - APPLICATION_PROFILE_TYPE_L4, APPLICATION_PROFILE_TYPE_HTTP, APPLICATION_PROFILE_TYPE_SYSLOG
    state: ${3$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  The state that should be applied on the entity 
    avi_api_update_method: ${4$$(yas-choose-value '("put" "patch"))}       # choices: put;patch  Default method for object update is HTTP PUT  Setting to patch will override that behavior to use HT
    avi_api_patch_op: ${5$$(yas-choose-value '("add" "replace" "delete"))} # choices: add;replace;delete  Patch operation to use when using avi_api_update_method as patch 
    cloud_config_cksum: ${6:value}                                         # Checksum of application profiles  Internally set by cloud connector  Field introduced in 17 2 14, 18 1 5, 18 2 1 
    created_by: ${7:value}                                                 # Name of the application profile creator  Field introduced in 17 2 14, 18 1 5, 18 2 1 
    description: ${8:value}                                                # User defined description for the object 
    dns_service_profile: ${9:value}                                        # Specifies various dns service related controls for virtual service 
    dos_rl_profile: ${10:value}                                            # Specifies various security related controls for virtual service 
    http_profile: ${11:value}                                              # Specifies the http application proxy profile parameters 
    preserve_client_ip: ${12:value}                                        # Specifies if client ip needs to be preserved for backend connection  Not compatible with connection multiplexing  Defaul
    preserve_client_port: ${13:value}                                      # Specifies if we need to preserve client port while preserving client ip for backend connections  Field introduced in 17 
    sip_service_profile: ${14:value}                                       # Specifies various sip service related controls for virtual service  Field introduced in 17 2 8, 18 1 3, 18 2 1 
    tcp_app_profile: ${15:value}                                           # Specifies the tcp application proxy profile parameters 
    tenant_ref: ${16:value}                                                # It is a reference to an object of type tenant 
    url: ${17:value}                                                       # Avi controller URL of the object 
    uuid: ${18:value}                                                      # Uuid of the application profile 
    controller: ${19:}                                                     # IP address or hostname of the controller  The default value is the environment variable C(AVI_CONTROLLER) 
    username: ${20:}                                                       # Username used for accessing Avi controller  The default value is the environment variable C(AVI_USERNAME) 
    password: ${21:}                                                       # Password of Avi user in Avi controller  The default value is the environment variable C(AVI_PASSWORD) 
    tenant: ${22:admin}                                                    # Name of tenant used for all Avi API calls and context of object 
    tenant_uuid: ${23:}                                                    # UUID of tenant used for all Avi API calls and context of object 
    api_version: ${{24:16}                                                 #4 4} # not required  Avi API version of to use for Avi API and objects 
    avi_credentials: ${25:value}                                           # Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details 
    api_context: ${26:value}                                               # Avi API context that includes current session ID and CSRF Token  This allows user to perform single login and re-use the
    avi_disable_session_cache_as_fact: ${27:value}                         # It disables avi session information to be cached as a fact 
