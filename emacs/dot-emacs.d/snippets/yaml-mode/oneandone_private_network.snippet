# -*- mode: snippet -*-
# name: Configure 1&1 private networking.
# prefix: oneandone_private_network_snippet
# key: oneandone_private_network
# group: ansible
# --

- name: ${0:Configure 1&1 private networking.}
  oneandone_private_network:                                               
    auth_token: ${1:Authenticating API token provided by 1&1}              #
    private_network: ${2:The identifier (id or name) of the network used with update state}#
    name: ${3:Private network name used with present state}                # Used as identifier (id or name) when used with absent state 
    state: ${4$$(yas-choose-value '("present" "absent" "update"))}         # choices: present;absent;update  Define a network's state to create, remove, or update 
    api_url: ${5:value}                                                    # Custom API URL  Overrides the ONEANDONE_API_URL environement variable 
    description: ${6:value}                                                # Set a description for the network 
    datacenter: ${7:value}                                                 # The identifier of the datacenter where the private network will be created
    network_address: ${8:value}                                            # Set a private network space, i e  192 168 1 0
    subnet_mask: ${9:value}                                                # Set the netmask for the private network, i e  255 255 255 0
    add_members: ${10:value}                                               # List of server identifiers (name or id) to be added to the private network 
    remove_members: ${11:value}                                            # List of server identifiers (name or id) to be removed from the private network 
    wait: ${12:true}                                                       # wait for the instance to be in state 'running' before returning
    wait_timeout: ${13:600}                                                # how long before wait gives up, in seconds
    wait_interval: ${14:5}                                                 # Defines the number of seconds to wait when using the _wait_for methods
