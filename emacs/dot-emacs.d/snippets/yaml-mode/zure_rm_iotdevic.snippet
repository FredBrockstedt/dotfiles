# -*- mode: snippet -*-
# name: Manage Azure IoT hub device
# prefix: azure_rm_iotdevice_snippet
# key: zure_rm_iotdevic
# group: ansible
# --

- name: ${0:Manage Azure IoT hub device}
  azure_rm_iotdevice:                                                      
    hub: ${1:Name of IoT Hub}                                              #
    hub_policy_name: ${2:Policy name of the IoT Hub which will be used to query from IoT hub}# This policy should have 'RegistryWrite, ServiceConnect, DeviceConnect' accesses  You may get 401 error
    hub_policy_key: ${3:Key of the I(hub_policy_name)}                     #
    name: ${4:Name of the IoT hub device identity}                         #
    state: ${5$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  State of the IoT hub  Use C(present) to create or update an IoT hub device and C(absent) to del
    auth_method: ${6$$(yas-choose-value '("sas" "certificate_authority" "self_signed"))}# choices: sas;certificate_authority;self_signed  The authorization type an entity is to be created with 
    primary_key: ${7:value}                                                # Explicit self-signed certificate thumbprint to use for primary key  Explicit Shared Private Key to use for primary key 
    secondary_key: ${8:value}                                              # Explicit self-signed certificate thumbprint to use for secondary key  Explicit Shared Private Key to use for secondary k
    status: ${9:value}                                                     # Set device status upon creation 
    edge_enabled: ${10:value}                                              # Flag indicating edge enablement  Not supported in IoT Hub with Basic tier 
    twin_tags: ${11:value}                                                 # A section that the solution back end can read from and write to  Tags are not visible to device apps  The tag can be nes
    desired: ${12:value}                                                   # Used along with reported properties to synchronize device configuration or conditions  The tag can be nested dictionary,
    ad_user: ${13:value}                                                   # Active Directory username  Use when authenticating with an Active Directory user rather than service principal 
    password: ${14:value}                                                  # Active Directory user password  Use when authenticating with an Active Directory user rather than service principal 
    profile: ${15:value}                                                   # Security profile found in ~/ azure/credentials file 
    subscription_id: ${16:value}                                           # Your Azure subscription Id 
    client_id: ${17:value}                                                 # Azure client ID  Use when authenticating with a Service Principal 
    secret: ${18:value}                                                    # Azure client secret  Use when authenticating with a Service Principal 
    tenant: ${19:value}                                                    # Azure tenant ID  Use when authenticating with a Service Principal 
    cloud_environment: ${20:AzureCloud}                                    # For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(Azure
    adfs_authority_url: ${21:value}                                        # Azure AD authority url  Use when authenticating with Username/password, and has your own ADFS authority 
    cert_validation_mode: ${22$$(yas-choose-value '("ignore" "validate"))} # choices: ignore;validate  Controls the certificate validation behavior for Azure endpoints  By default, all modules will
    auth_source: ${23$$(yas-choose-value '("auto" "cli" "credential_file" "env" "msi"))}# choices: auto;cli;credential_file;env;msi  Controls the source of the credentials to use for authentication
    api_profile: ${24:latest}                                              # Selects an API profile to use when communicating with Azure services  Default value of C(latest) is appropriate for publ
    tags: ${25:value}                                                      # Dictionary of string:string pairs to assign as metadata to the object  Metadata tags on the object will be updated with 
    append_tags: ${26:True}                                                # Use to control if tags field is canonical or just appends to existing tags  When canonical, any tags not found in the ta
