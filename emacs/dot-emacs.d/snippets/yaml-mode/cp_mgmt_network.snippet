# -*- mode: snippet -*-
# name: Manages network objects on Check Point over Web Services API
# prefix: cp_mgmt_network_snippet
# key: cp_mgmt_network
# group: ansible
# --

- name: ${0:Manages network objects on Check Point over Web Services API}
  cp_mgmt_network:                                                         
    name: ${1:Object name}                                                 #
    subnet: ${2:value}                                                     # IPv4 or IPv6 network address  If both addresses are required use subnet4 and subnet6 fields explicitly 
    subnet4: ${3:value}                                                    # IPv4 network address 
    subnet6: ${4:value}                                                    # IPv6 network address 
    mask_length: ${5:value}                                                # IPv4 or IPv6 network mask length  If both masks are required use mask-length4 and mask-length6 fields explicitly  Instea
    mask_length4: ${6:value}                                               # IPv4 network mask length 
    mask_length6: ${7:value}                                               # IPv6 network mask length 
    subnet_mask: ${8:value}                                                # IPv4 network mask 
    nat_settings: ${9:value}                                               # NAT settings 
    tags: ${10:value}                                                      # Collection of tag identifiers 
    broadcast: ${11$$(yas-choose-value '("disallow" "allow"))}             # choices: disallow;allow  Allow broadcast address inclusion 
    color: ${12$$(yas-choose-value '("aquamarine" "black" "blue" "crete blue" "burlywood" "cyan" "dark green" "khaki" "orchid" "dark orange" "dark sea green" "pink" "turquoise" "dark blue" "firebri
    comments: ${13:value}                                                  # Comments string 
    details_level: ${14$$(yas-choose-value '("uid" "standard" "full"))}    # choices: uid;standard;full  The level of detail for some of the fields in the response can vary from showing only the UI
    groups: ${15:value}                                                    # Collection of group identifiers 
    ignore_warnings: ${16:value}                                           # Apply changes ignoring warnings 
    ignore_errors: ${17:value}                                             # Apply changes ignoring errors  You won't be able to publish such a changes  If ignore-warnings flag was omitted - warnin
    state: ${18$$(yas-choose-value '("present" "absent"))}                 # choices: present;absent  State of the access rule (present or absent)  Defaults to present 
    auto_publish_session: ${19:value}                                      # Publish the current session if changes have been performed after task completes 
    wait_for_task: ${20:True}                                              # Wait for the task to end  Such as publish task 
    version: ${21:value}                                                   # Version of checkpoint  If not given one, the latest version taken 
