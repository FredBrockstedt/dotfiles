# -*- mode: snippet -*-
# name: Module for setup of ServiceEngineGroup Avi RESTful Object
# prefix: avi_serviceenginegroup_snippet
# key: vi_serviceenginegroup
# group: ansible
# --

- name: ${0:Module for setup of ServiceEngineGroup Avi RESTful Object}
  avi_serviceenginegroup:                                                  
    name: ${1:Name of the object}                                          #
    state: ${2$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  The state that should be applied on the entity 
    avi_api_update_method: ${3$$(yas-choose-value '("put" "patch"))}       # choices: put;patch  Default method for object update is HTTP PUT  Setting to patch will override that behavior to use HT
    avi_api_patch_op: ${4$$(yas-choose-value '("add" "replace" "delete"))} # choices: add;replace;delete  Patch operation to use when using avi_api_update_method as patch 
    accelerated_networking: ${5:value}                                     # Enable accelerated networking option for azure se  Accelerated networking enables single root i/o virtualization (sr-iov
    active_standby: ${6:value}                                             # Service engines in active/standby mode for ha failover  Default value when not specified in API or module is interpreted
    additional_config_memory: ${7:value}                                   # Indicates the percent of config memory used for config updates  Allowed values are 0-90  Field deprecated in 18 1 2  Fie
    advertise_backend_networks: ${8:value}                                 # Advertise reach-ability of backend server networks via adc through bgp for default gateway feature  Default value when n
    aggressive_failure_detection: ${9:value}                               # Enable aggressive failover configuration for ha  Default value when not specified in API or module is interpreted by Avi
    algo: ${10:value}                                                      # In compact placement, virtual services are placed on existing ses until max_vs_per_se limit is reached  Enum options - P
    allow_burst: ${11:value}                                               # Allow ses to be created using burst license  Field introduced in 17 2 5 
    app_cache_percent: ${12:value}                                         # A percent value of total se memory reserved for application caching  This is an se bootup property and requires se resta
    app_learning_memory_percent: ${13:value}                               # A percent value of total se memory reserved for application learning  This is an se bootup property and requires se rest
    archive_shm_limit: ${14:value}                                         # Amount of se memory in gb until which shared memory is collected in core archive  Field introduced in 17 1 3  Default va
    async_ssl: ${15:value}                                                 # Ssl handshakes will be handled by dedicated ssl threads  Default value when not specified in API or module is interprete
    async_ssl_threads: ${16:value}                                         # Number of async ssl threads per se_dp  Allowed values are 1-16  Default value when not specified in API or module is int
    auto_rebalance: ${17:value}                                            # If set, virtual services will be automatically migrated when load on an se is less than minimum or more than maximum thr
    auto_rebalance_capacity_per_se: ${18:value}                            # Capacities of se for auto rebalance for each criteria  Field introduced in 17 2 4 
    auto_rebalance_criteria: ${19:value}                                   # Set of criteria for se auto rebalance  Enum options - SE_AUTO_REBALANCE_CPU, SE_AUTO_REBALANCE_PPS, SE_AUTO_REBALANCE_MB
    auto_rebalance_interval: ${20:value}                                   # Frequency of rebalance, if 'auto rebalance' is enabled  Default value when not specified in API or module is interpreted
    auto_redistribute_active_standby_load: ${21:value}                     # Redistribution of virtual services from the takeover se to the replacement se can cause momentary traffic loss  If the a
    bgp_state_update_interval: ${22:value}                                 # Bgp peer state update interval  Allowed values are 5-100  Field introduced in 17 2 14,18 1 5,18 2 1  Default value when 
    buffer_se: ${23:value}                                                 # Excess service engine capacity provisioned for ha failover  Default value when not specified in API or module is interpr
    cloud_ref: ${24:value}                                                 # It is a reference to an object of type cloud 
    config_debugs_on_all_cores: ${25:value}                                # Enable config debugs on all cores of se  Field introduced in 17 2 13,18 1 5,18 2 1  Default value when not specified in 
    connection_memory_percentage: ${26:value}                              # Percentage of memory for connection state  This will come at the expense of memory used for http in-memory cache  Allowe
    cpu_reserve: ${27:value}                                               # Boolean flag to set cpu_reserve  Default value when not specified in API or module is interpreted by Avi Controller as F
    cpu_socket_affinity: ${28:value}                                       # Allocate all the cpu cores for the service engine virtual machines  on the same cpu socket  Applicable only for vcenter 
    custom_securitygroups_data: ${29:value}                                # Custom security groups to be associated with data vnics for se instances in openstack and aws clouds  Field introduced i
    custom_securitygroups_mgmt: ${30:value}                                # Custom security groups to be associated with management vnic for se instances in openstack and aws clouds  Field introdu
    custom_tag: ${31:value}                                                # Custom tag will be used to create the tags for se instance in aws  Note this is not the same as the prefix for se name 
    data_network_id: ${32:value}                                           # Subnet used to spin up the data nic for service engines, used only for azure cloud  Overrides the cloud level setting fo
    datascript_timeout: ${33:value}                                        # Number of instructions before datascript times out  Allowed values are 0-100000000  Field introduced in 18 2 3  Default 
    dedicated_dispatcher_core: ${34:value}                                 # Dedicate the core that handles packet receive/transmit from the network to just the dispatching function  Don't use it f
    description: ${35:value}                                               # User defined description for the object 
    disable_avi_securitygroups: ${36:value}                                # By default, avi creates and manages security groups along with custom sg provided by user  Set this to true to disallow 
    disable_csum_offloads: ${37:value}                                     # Stop using tcp/udp and ip checksum offload features of nics  Field introduced in 17 1 14, 17 2 5, 18 1 1  Default value 
    disable_gro: ${38:value}                                               # Disable generic receive offload (gro) in dpdk poll-mode driver packet receive path  Gro is on by default on nics that do
    disable_se_memory_check: ${39:value}                                   # If set, disable the config memory check done in service engine  Field introduced in 18 1 2  Default value when not speci
    disable_tso: ${40:value}                                               # Disable tcp segmentation offload (tso) in dpdk poll-mode driver packet transmit path  Tso is on by default on nics that 
    disk_per_se: ${41:value}                                               # Amount of disk space for each of the service engine virtual machines  Default value when not specified in API or module 
    distribute_load_active_standby: ${42:value}                            # Use both the active and standby service engines for virtual service placement in the legacy active standby ha mode  Defa
    distribute_queues: ${43:value}                                         # Distributes queue ownership among cores so multiple cores handle dispatcher duties  Field introduced in 17 2 8  Default 
    enable_hsm_priming: ${44:value}                                        # (this is a beta feature)  Enable hsm key priming  If enabled, key handles on the hsm will be synced to se before process
    enable_multi_lb: ${45:value}                                           # Applicable only for azure cloud with basic sku lb  If set, additional azure lbs will be automatically created if resourc
    enable_routing: ${46:value}                                            # Enable routing for this serviceenginegroup   Default value when not specified in API or module is interpreted by Avi Con
    enable_vip_on_all_interfaces: ${47:value}                              # Enable vip on all interfaces of se  Field introduced in 17 1 1  Default value when not specified in API or module is int
    enable_vmac: ${48:value}                                               # Use virtual mac address for interfaces on which floating interface ips are placed  Default value when not specified in A
    ephemeral_portrange_end: ${49:value}                                   # End local ephemeral port number for outbound connections  Field introduced in 17 2 13, 18 1 5, 18 2 1 
    ephemeral_portrange_start: ${50:value}                                 # Start local ephemeral port number for outbound connections  Field introduced in 17 2 13, 18 1 5, 18 2 1 
    extra_config_multiplier: ${51:value}                                   # Multiplier for extra config to support large vs/pool config  Default value when not specified in API or module is interp
    extra_shared_config_memory: ${52:value}                                # Extra config memory to support large geo db configuration  Field introduced in 17 1 1  Default value when not specified 
    floating_intf_ip: ${53:value}                                          # If serviceenginegroup is configured for legacy 1+1 active standby ha mode, floating ip's will be advertised only by the 
    floating_intf_ip_se_2: ${54:value}                                     # If serviceenginegroup is configured for legacy 1+1 active standby ha mode, floating ip's will be advertised only by the 
    flow_table_new_syn_max_entries: ${55:value}                            # Maximum number of flow table entries that have not completed tcp three-way handshake yet  Field introduced in 17 2 5  De
    free_list_size: ${56:value}                                            # Number of entries in the free list  Field introduced in 17 2 10, 18 1 2  Default value when not specified in API or modu
    ha_mode: ${57:value}                                                   # High availability mode for all the virtual services using this service engine group  Enum options - HA_MODE_SHARED_PAIR,
    hardwaresecuritymodulegroup_ref: ${58:value}                           # It is a reference to an object of type hardwaresecuritymodulegroup 
    heap_minimum_config_memory: ${59:value}                                # Minimum required heap memory to apply any configuration  Allowed values are 0-100  Field introduced in 18 1 2  Default v
    hm_on_standby: ${60:value}                                             # Enable active health monitoring from the standby se for all placed virtual services  Default value when not specified in
    host_attribute_key: ${61:value}                                        # Key of a (key, value) pair identifying a label for a set of nodes usually in container clouds  Needs to be specified tog
    host_attribute_value: ${62:value}                                      # Value of a (key, value) pair identifying a label for a set of nodes usually in container clouds  Needs to be specified t
    host_gateway_monitor: ${63:value}                                      # Enable the host gateway monitor when service engine is deployed as docker container  Disabled by default  Field introduc
    hypervisor: ${64:value}                                                # Override default hypervisor  Enum options - DEFAULT, VMWARE_ESX, KVM, VMWARE_VSAN, XEN 
    ignore_rtt_threshold: ${65:value}                                      # Ignore rtt samples if it is above threshold  Field introduced in 17 1 6,17 2 2  Default value when not specified in API 
    ingress_access_data: ${66:value}                                       # Program se security group ingress rules to allow vip data access from remote cidr type  Enum options - SG_INGRESS_ACCESS
    ingress_access_mgmt: ${67:value}                                       # Program se security group ingress rules to allow ssh/icmp management access from remote cidr type  Enum options - SG_ING
    instance_flavor: ${68:value}                                           # Instance/flavor name for se instance 
    iptables: ${69:value}                                                  # Iptables rules 
    least_load_core_selection: ${70:value}                                 # Select core with least load for new flow  Default value when not specified in API or module is interpreted by Avi Contro
    license_tier: ${71:value}                                              # Specifies the license tier which would be used  This field by default inherits the value from cloud  Enum options - ENTE
    license_type: ${72:value}                                              # If no license type is specified then default license enforcement for the cloud type is chosen  Enum options - LIC_BACKEN
    log_disksz: ${73:value}                                                # Maximum disk capacity (in mb) to be allocated to an se  This is exclusively used for debug and log data  Default value w
    max_cpu_usage: ${74:value}                                             # When cpu usage on an se exceeds this threshold, virtual services hosted on this se may be rebalanced to other ses to red
    max_memory_per_mempool: ${75:value}                                    # Max bytes that can be allocated in a single mempool  Field introduced in 18 1 5  Default value when not specified in API
    max_public_ips_per_lb: ${76:value}                                     # Applicable to azure platform only  Maximum number of public ips per azure lb  Field introduced in 17 2 12, 18 1 2  Defau
    max_rules_per_lb: ${77:value}                                          # Applicable to azure platform only  Maximum number of rules per azure lb  Field introduced in 17 2 12, 18 1 2  Default va
    max_scaleout_per_vs: ${78:value}                                       # Maximum number of active service engines for the virtual service  Allowed values are 1-64  Default value when not specif
    max_se: ${79:value}                                                    # Maximum number of services engines in this group  Allowed values are 0-1000  Default value when not specified in API or 
    max_vs_per_se: ${80:value}                                             # Maximum number of virtual services that can be placed on a single service engine  East west virtual services are exclude
    mem_reserve: ${81:value}                                               # Boolean flag to set mem_reserve  Default value when not specified in API or module is interpreted by Avi Controller as T
    memory_for_config_update: ${82:value}                                  # Indicates the percent of memory reserved for config updates  Allowed values are 0-100  Field introduced in 18 1 2  Defau
    memory_per_se: ${83:value}                                             # Amount of memory for each of the service engine virtual machines  Default value when not specified in API or module is i
    mgmt_network_ref: ${84:value}                                          # Management network to use for avi service engines  It is a reference to an object of type network 
    mgmt_subnet: ${85:value}                                               # Management subnet to use for avi service engines 
    min_cpu_usage: ${86:value}                                             # When cpu usage on an se falls below the minimum threshold, virtual services hosted on the se may be consolidated onto ot
    min_scaleout_per_vs: ${87:value}                                       # Minimum number of active service engines for the virtual service  Allowed values are 1-64  Default value when not specif
    min_se: ${88:value}                                                    # Minimum number of services engines in this group (relevant for se autorebalance only)  Allowed values are 0-1000  Field 
    minimum_connection_memory: ${89:value}                                 # Indicates the percent of memory reserved for connections  Allowed values are 0-100  Field introduced in 18 1 2  Default 
    minimum_required_config_memory: ${90:value}                            # Required available config memory to apply any configuration  Allowed values are 0-90  Field deprecated in 18 1 2  Field 
    n_log_streaming_threads: ${91:value}                                   # Number of threads to use for log streaming  Allowed values are 1-100  Field introduced in 17 2 12, 18 1 2  Default value
    non_significant_log_throttle: ${92:value}                              # This setting limits the number of non-significant logs generated per second per core on this se  Default is 100 logs per
    num_dispatcher_cores: ${93:value}                                      # Number of dispatcher cores (0,1,2,4,8 or 16)  If set to 0, then number of dispatcher cores is deduced automatically  All
    num_flow_cores_sum_changes_to_ignore: ${94:value}                      # Number of changes in num flow cores sum to ignore  Default value when not specified in API or module is interpreted by A
    openstack_availability_zone: ${95:value}                               # Field deprecated in 17 1 1 
    openstack_availability_zones: ${96:value}                              # Field introduced in 17 1 1 
    openstack_mgmt_network_name: ${97:value}                               # Avi management network name 
    openstack_mgmt_network_uuid: ${98:value}                               # Management network uuid 
    os_reserved_memory: ${99:value}                                        # Amount of extra memory to be reserved for use by the operating system on a service engine  Default value when not specif
    per_app: ${100:value}                                                  # Per-app se mode is designed for deploying dedicated load balancers per app (vs)  In this mode, each se is limited to a m
    placement_mode: ${101:value}                                           # If placement mode is 'auto', virtual services are automatically placed on service engines  Enum options - PLACEMENT_MODE
    realtime_se_metrics: ${102:value}                                      # Enable or disable real time se metrics 
    reboot_on_stop: ${103:value}                                           # Reboot the system if the se is stopped  Field introduced in 17 2 16,18 2 3  Default value when not specified in API or m
    se_bandwidth_type: ${104:value}                                        # Select the se bandwidth for the bandwidth license  Enum options - SE_BANDWIDTH_UNLIMITED, SE_BANDWIDTH_25M, SE_BANDWIDTH
    se_deprovision_delay: ${105:value}                                     # Duration to preserve unused service engine virtual machines before deleting them  If traffic to a virtual service were t
    se_dos_profile: ${106:value}                                           # Dosthresholdprofile settings for serviceenginegroup 
    se_dpdk_pmd: ${107:value}                                              # Determines if dpdk pool mode driver should be used or not   0  automatically determine based on hypervisor/nic type 1  u
    se_flow_probe_retries: ${108:value}                                    # Flow probe retry count if no replies are received  Allowed values are 0-5  Field introduced in 18 1 4, 18 2 1  Default v
    se_flow_probe_timer: ${109:value}                                      # Timeout in milliseconds for flow probe entries  Allowed values are 10-200  Field introduced in 18 1 4, 18 2 1  Default v
    se_ipc_udp_port: ${110:value}                                          # Udp port for se_dp ipc in docker bridge mode  Field introduced in 17 1 2  Default value when not specified in API or mod
    se_name_prefix: ${111:value}                                           # Prefix to use for virtual machine name of service engines  Default value when not specified in API or module is interpre
    se_pcap_lookahead: ${112:value}                                        # Enables lookahead mode of packet receive in pcap mode  Introduced to overcome an issue with hv_netvsc driver  Lookahead 
    se_pcap_reinit_frequency: ${113:value}                                 # Frequency in seconds at which periodically a pcap reinit check is triggered  May be used in conjunction with the configu
    se_pcap_reinit_threshold: ${114:value}                                 # Threshold for input packet receive errors in pcap mode exceeding which a pcap reinit is triggered  If not set, an uncond
    se_probe_port: ${115:value}                                            # Tcp port on se where echo service will be run  Field introduced in 17 2 2  Default value when not specified in API or mo
    se_remote_punt_udp_port: ${116:value}                                  # Udp port for punted packets in docker bridge mode  Field introduced in 17 1 2  Default value when not specified in API o
    se_routing: ${117:value}                                               # Enable routing via service engine datapath  When disabled, routing is done by the linux kernel  Ip routing needs to be e
    se_sb_dedicated_core: ${118:value}                                     # Sideband traffic will be handled by a dedicated core  Field introduced in 16 5 2, 17 1 9, 17 2 3  Default value when not
    se_sb_threads: ${119:value}                                            # Number of sideband threads per se  Allowed values are 1-128  Field introduced in 16 5 2, 17 1 9, 17 2 3  Default value w
    se_thread_multiplier: ${120:value}                                     # Multiplier for se threads based on vcpu  Allowed values are 1-10  Default value when not specified in API or module is i
    se_tracert_port_range: ${121:value}                                    # Traceroute port range  Field introduced in 17 2 8 
    se_tunnel_mode: ${122:value}                                           # Determines if dsr from secondary se is active or not  0  automatically determine based on hypervisor type  1  disable ds
    se_tunnel_udp_port: ${123:value}                                       # Udp port for tunneled packets from secondary to primary se in docker bridge mode  Field introduced in 17 1 3  Default va
    se_udp_encap_ipc: ${124:value}                                         # Determines if se-se ipc messages are encapsulated in a udp header  0  automatically determine based on hypervisor type  
    se_use_dpdk: ${125:value}                                              # Determines if dpdk library should be used or not   0  automatically determine based on hypervisor type 1  use dpdk if pc
    se_vs_hb_max_pkts_in_batch: ${126:value}                               # Maximum number of aggregated vs heartbeat packets to send in a batch  Allowed values are 1-256  Field introduced in 17 1
    se_vs_hb_max_vs_in_pkt: ${127:value}                                   # Maximum number of virtualservices for which heartbeat messages are aggregated in one packet  Allowed values are 1-1024  
    self_se_election: ${128:value}                                         # Enable ses to elect a primary amongst themselves in the absence of a connectivity to controller  Field introduced in 18 
    service_ip6_subnets: ${129:value}                                      # Ipv6 subnets assigned to the se group  Required for vs group placement  Field introduced in 18 1 1 
    service_ip_subnets: ${130:value}                                       # Subnets assigned to the se group  Required for vs group placement  Field introduced in 17 1 1 
    shm_minimum_config_memory: ${131:value}                                # Minimum required shared memory to apply any configuration  Allowed values are 0-100  Field introduced in 18 1 2  Default
    significant_log_throttle: ${132:value}                                 # This setting limits the number of significant logs generated per second per core on this se  Default is 100 logs per sec
    ssl_preprocess_sni_hostname: ${133:value}                              # (beta) preprocess ssl client hello for sni hostname extension if set to true, this will apply sni child's ssl protocol(s
    tenant_ref: ${134:value}                                               # It is a reference to an object of type tenant 
    udf_log_throttle: ${135:value}                                         # This setting limits the number of udf logs generated per second per core on this se  Udf logs are generated due to the c
    url: ${136:value}                                                      # Avi controller URL of the object 
    use_standard_alb: ${137:value}                                         # Use standard sku azure load balancer  By default cloud level flag is set  If not set, it inherits/uses the use_standard_
    uuid: ${138:value}                                                     # Unique object identifier of the object 
    vcenter_clusters: ${139:value}                                         # Vcenterclusters settings for serviceenginegroup 
    vcenter_datastore_mode: ${140:value}                                   # Enum options - vcenter_datastore_any, vcenter_datastore_local, vcenter_datastore_shared  Default value when not specifie
    vcenter_datastores: ${141:value}                                       # List of vcenterdatastore 
    vcenter_datastores_include: ${142:value}                               # Boolean flag to set vcenter_datastores_include  Default value when not specified in API or module is interpreted by Avi 
    vcenter_folder: ${143:value}                                           # Folder to place all the service engine virtual machines in vcenter  Default value when not specified in API or module is
    vcenter_hosts: ${144:value}                                            # Vcenterhosts settings for serviceenginegroup 
    vcpus_per_se: ${145:value}                                             # Number of vcpus for each of the service engine virtual machines  Default value when not specified in API or module is in
    vip_asg: ${146:value}                                                  # When vip_asg is set, vip configuration will be managed by avi user will be able to configure vip_asg or vips individuall
    vs_host_redundancy: ${147:value}                                       # Ensure primary and secondary service engines are deployed on different physical hosts  Default value when not specified 
    vs_scalein_timeout: ${148:value}                                       # Time to wait for the scaled in se to drain existing flows before marking the scalein done  Default value when not specif
    vs_scalein_timeout_for_upgrade: ${149:value}                           # During se upgrade, time to wait for the scaled-in se to drain existing flows before marking the scalein done  Default va
    vs_scaleout_timeout: ${150:value}                                      # Time to wait for the scaled out se to become ready before marking the scaleout done  Default value when not specified in
    vs_se_scaleout_additional_wait_time: ${151:value}                      # Wait time for sending scaleout ready notification after virtual service is marked up  In certain deployments, there may 
    vs_se_scaleout_ready_timeout: ${152:value}                             # Timeout in seconds for service engine to sendscaleout ready notification of a virtual service  Allowed values are 0-60  
    vs_switchover_timeout: ${153:value}                                    # During se upgrade in a legacy active/standby segroup, time to wait for the new primary se to accept flows before marking
    vss_placement: ${154:value}                                            # Parameters to place virtual services on only a subset of the cores of an se  Field introduced in 17 2 5 
    vss_placement_enabled: ${155:value}                                    # If set, virtual services will be placed on only a subset of the cores of an se  Field introduced in 18 1 1  Default valu
    waf_learning_interval: ${156:value}                                    # Frequency with which se publishes waf learning  Allowed values are 1-43200  Field deprecated in 18 2 3  Field introduced
    waf_learning_memory: ${157:value}                                      # Amount of memory reserved on se for waf learning  Cannot exceed 5% of se memory  Field deprecated in 18 2 3  Field intro
    waf_mempool: ${158:value}                                              # Enable memory pool for waf  Field introduced in 17 2 3  Default value when not specified in API or module is interpreted
    waf_mempool_size: ${159:value}                                         # Memory pool size used for waf  Field introduced in 17 2 3  Default value when not specified in API or module is interpre
    controller: ${160:}                                                    # IP address or hostname of the controller  The default value is the environment variable C(AVI_CONTROLLER) 
    username: ${161:}                                                      # Username used for accessing Avi controller  The default value is the environment variable C(AVI_USERNAME) 
    password: ${162:}                                                      # Password of Avi user in Avi controller  The default value is the environment variable C(AVI_PASSWORD) 
    tenant: ${163:admin}                                                   # Name of tenant used for all Avi API calls and context of object 
    tenant_uuid: ${164:}                                                   # UUID of tenant used for all Avi API calls and context of object 
    api_version: ${{165:16}                                                #4 4} # not required  Avi API version of to use for Avi API and objects 
    avi_credentials: ${166:value}                                          # Avi Credentials dictionary which can be used in lieu of enumerating Avi Controller login details 
    api_context: ${167:value}                                              # Avi API context that includes current session ID and CSRF Token  This allows user to perform single login and re-use the
    avi_disable_session_cache_as_fact: ${168:value}                        # It disables avi session information to be cached as a fact 
