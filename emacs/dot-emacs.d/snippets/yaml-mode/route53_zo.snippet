# -*- mode: snippet -*-
# name: add or delete Route53 zones
# prefix: route53_zone_snippet
# key: route53_zo
# group: ansible
# --

- name: ${0:add or delete Route53 zones}
  route53_zone:                                                            
    zone: ${1:The DNS zone record (eg: foo}                                #com )
    state: ${2$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  whether or not the zone should exist or not
    vpc_id: ${3:value}                                                     # The VPC ID the zone should be a part of (if this is going to be a private zone)
    vpc_region: ${4:value}                                                 # The VPC Region the zone should be a part of (if this is going to be a private zone)
    comment: ${5:}                                                         # Comment associated with the zone
    hosted_zone_id: ${6:value}                                             # The unique zone identifier you want to delete or "all" if there are many zones with the same domain name  Required if th
    delegation_set_id: ${7:value}                                          # The reusable delegation set ID to be associated with the zone  Note that you can't associate a reusable delegation set w
    debug_botocore_endpoint_logs: ${8:false}                               # Use a botocore endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, o
    ec2_url: ${9:value}                                                    # Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints)  Ignored for module
    aws_secret_key: ${10:value}                                            # AWS secret key  If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment va
    aws_access_key: ${11:value}                                            # AWS access key  If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variabl
    security_token: ${12:value}                                            # AWS STS security token  If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable i
    validate_certs: ${13:True}                                             # When set to "no", SSL certificates will not be validated for boto versions >= 2 6 0 
    profile: ${14:value}                                                   # Uses a boto profile  Only works with boto >= 2 24 0 
    region: ${15:value}                                                    # The AWS region to use  If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is 
