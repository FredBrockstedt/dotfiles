# -*- mode: snippet -*-
# name: Module to manage affinity labels in oVirt/RHV
# prefix: ovirt_affinity_label_snippet
# key: ovirt_affinity
# group: ansible
# --

- name: ${0:Module to manage affinity labels in oVirt/RHV}
  ovirt_affinity_label:                                                    
    name: ${1:Name of the affinity label to manage}                        #
    auth: ${2:Dictionary with values needed to create HTTP/HTTPS connection to oVirt:}#
    state: ${3$$(yas-choose-value '("present" "absent"))}                  # choices: present;absent  Should the affinity label be present or absent 
    cluster: ${4:value}                                                    # Name of the cluster where vms and hosts resides 
    vms: ${5:value}                                                        # List of the VMs names, which should have assigned this affinity label 
    hosts: ${6:value}                                                      # List of the hosts names, which should have assigned this affinity label 
    wait: ${7:True}                                                        # C(yes) if the module should wait for the entity to get into desired state 
    fetch_nested: ${8:value}                                               # If I(True) the module will fetch additional data from the API  It will fetch IDs of the VMs disks, snapshots, etc  User 
    nested_attributes: ${9:value}                                          # Specifies list of the attributes which should be fetched from the API  This parameter apply only when C(fetch_nested) is
    timeout: ${10:180}                                                     # The amount of time in seconds the module should wait for the instance to get into desired state 
    poll_interval: ${11:3}                                                 # Number of the seconds the module waits until another poll request on entity status is sent 
