# -*- mode: snippet -*-
# name: Manage Azure Public IP Addresses
# prefix: azure_rm_publicipaddress_snippet
# key: zure_rm_publicipaddr
# group: ansible
# --

- name: ${0:Manage Azure Public IP Addresses}
  azure_rm_publicipaddress:                                                
    resource_group: ${1:Name of resource group with which the Public IP is associated}#
    name: ${2:Name of the Public IP}                                       #
    allocation_method: ${3$$(yas-choose-value '("dynamic" "static" "Static" "Dynamic"))}# choices: dynamic;static;Static;Dynamic  Control whether the assigned Public IP remains permanently assigned
    domain_name: ${4:value}                                                # The customizable portion of the FQDN assigned to public IP address  This is an explicit setting  If no value is provided
    state: ${5$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  Assert the state of the Public IP  Use C(present) to create or update a and C(absent) to delete
    location: ${6:value}                                                   # Valid Azure location  Defaults to location of the resource group 
    sku: ${7$$(yas-choose-value '("basic" "standard" "Basic" "Standard"))} # choices: basic;standard;Basic;Standard  The public IP address SKU 
    ip_tags: ${8:value}                                                    # List of IpTag associated with the public IP address  Each element should contain type:value pair 
    idle_timeout: ${9:value}                                               # Idle timeout in minutes 
    version: ${10$$(yas-choose-value '("ipv4" "ipv6"))}                    # choices: ipv4;ipv6  The public IP address version 
    ad_user: ${11:value}                                                   # Active Directory username  Use when authenticating with an Active Directory user rather than service principal 
    password: ${12:value}                                                  # Active Directory user password  Use when authenticating with an Active Directory user rather than service principal 
    profile: ${13:value}                                                   # Security profile found in ~/ azure/credentials file 
    subscription_id: ${14:value}                                           # Your Azure subscription Id 
    client_id: ${15:value}                                                 # Azure client ID  Use when authenticating with a Service Principal 
    secret: ${16:value}                                                    # Azure client secret  Use when authenticating with a Service Principal 
    tenant: ${17:value}                                                    # Azure tenant ID  Use when authenticating with a Service Principal 
    cloud_environment: ${18:AzureCloud}                                    # For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(Azure
    adfs_authority_url: ${19:value}                                        # Azure AD authority url  Use when authenticating with Username/password, and has your own ADFS authority 
    cert_validation_mode: ${20$$(yas-choose-value '("ignore" "validate"))} # choices: ignore;validate  Controls the certificate validation behavior for Azure endpoints  By default, all modules will
    auth_source: ${21$$(yas-choose-value '("auto" "cli" "credential_file" "env" "msi"))}# choices: auto;cli;credential_file;env;msi  Controls the source of the credentials to use for authentication
    api_profile: ${22:latest}                                              # Selects an API profile to use when communicating with Azure services  Default value of C(latest) is appropriate for publ
    tags: ${23:value}                                                      # Dictionary of string:string pairs to assign as metadata to the object  Metadata tags on the object will be updated with 
    append_tags: ${24:True}                                                # Use to control if tags field is canonical or just appends to existing tags  When canonical, any tags not found in the ta
