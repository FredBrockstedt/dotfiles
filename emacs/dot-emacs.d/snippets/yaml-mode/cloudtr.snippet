# -*- mode: snippet -*-
# name: manage CloudTrail create, delete, update
# prefix: cloudtrail_snippet
# key: cloudtr
# group: ansible
# --

- name: ${0:manage CloudTrail create, delete, update}
  cloudtrail:                                                              
    state: ${1$$(yas-choose-value '("present" "absent" "enabled" "disabled"))}# Add or remove CloudTrail configuration  The following states have been preserved for backwards compatibility  C(state
    name: ${2:Name for the CloudTrail}                                     # Names are unique per-region unless the CloudTrail is a multi-region trail, in which case it is unique per-account 
    enable_logging: ${3:True}                                              # Start or stop the CloudTrail logging  If stopped the trail will be paused and will not record events or deliver log file
    s3_bucket_name: ${4:value}                                             # An existing S3 bucket where CloudTrail will deliver log files  This bucket should exist and have the proper policy  See 
    s3_key_prefix: ${5:value}                                              # S3 Key prefix for delivered log files  A trailing slash is not necessary and will be removed 
    is_multi_region_trail: ${6:False}                                      # Specify whether the trail belongs only to one region or exists in all regions 
    enable_log_file_validation: ${7:value}                                 # Specifies whether log file integrity validation is enabled  CloudTrail will create a hash for every log file delivered a
    include_global_events: ${8:True}                                       # Record API calls from global services such as IAM and STS 
    sns_topic_name: ${9:value}                                             # SNS Topic name to send notifications to when a log file is delivered 
    cloudwatch_logs_role_arn: ${10:value}                                  # Specifies a full ARN for an IAM role that assigns the proper permissions for CloudTrail to create and write to the log g
    cloudwatch_logs_log_group_arn: ${11:value}                             # A full ARN specifying a valid CloudWatch log group to which CloudTrail logs will be delivered  The log group should alre
    kms_key_id: ${12:value}                                                # Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail  This also has the effect of enabling log fi
    tags: ${13:namespace()}                                                # A hash/dictionary of tags to be applied to the CloudTrail resource  Remove completely or specify an empty dictionary to 
    debug_botocore_endpoint_logs: ${14:false}                              # Use a botocore endpoint logger to parse the unique (rather than total) "resource:action" API calls made during a task, o
    ec2_url: ${15:value}                                                   # Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints)  Ignored for module
    aws_secret_key: ${16:value}                                            # AWS secret key  If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment va
    aws_access_key: ${17:value}                                            # AWS access key  If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variabl
    security_token: ${18:value}                                            # AWS STS security token  If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable i
    validate_certs: ${19:True}                                             # When set to "no", SSL certificates will not be validated for boto versions >= 2 6 0 
    profile: ${20:value}                                                   # Uses a boto profile  Only works with boto >= 2 24 0 
    region: ${21:value}                                                    # The AWS region to use  If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is 
