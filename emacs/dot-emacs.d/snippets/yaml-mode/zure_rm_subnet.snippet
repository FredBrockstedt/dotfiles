# -*- mode: snippet -*-
# name: Manage Azure subnets
# prefix: azure_rm_subnet_snippet
# key: zure_rm_subnet
# group: ansible
# --

- name: ${0:Manage Azure subnets}
  azure_rm_subnet:                                                         
    resource_group: ${1:Name of resource group}                            #
    name: ${2:Name of the subnet}                                          #
    virtual_network_name: ${3:Name of an existing virtual network with which the subnet is or will be associated}#
    address_prefix_cidr: ${4:value}                                        # CIDR defining the IPv4 address space of the subnet  Must be valid within the context of the virtual network 
    security_group: ${5:value}                                             # Existing security group with which to associate the subnet  It can be the security group name which is in the same resou
    state: ${6$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  Assert the state of the subnet  Use C(present) to create or update a subnet and use C(absent) t
    route_table: ${7:value}                                                # The reference of the RouteTable resource  Can be the name or resource ID of the route table  Can be a dict containing th
    service_endpoints: ${8:value}                                          # An array of service endpoints 
    ad_user: ${9:value}                                                    # Active Directory username  Use when authenticating with an Active Directory user rather than service principal 
    password: ${10:value}                                                  # Active Directory user password  Use when authenticating with an Active Directory user rather than service principal 
    profile: ${11:value}                                                   # Security profile found in ~/ azure/credentials file 
    subscription_id: ${12:value}                                           # Your Azure subscription Id 
    client_id: ${13:value}                                                 # Azure client ID  Use when authenticating with a Service Principal 
    secret: ${14:value}                                                    # Azure client secret  Use when authenticating with a Service Principal 
    tenant: ${15:value}                                                    # Azure tenant ID  Use when authenticating with a Service Principal 
    cloud_environment: ${16:AzureCloud}                                    # For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(Azure
    adfs_authority_url: ${17:value}                                        # Azure AD authority url  Use when authenticating with Username/password, and has your own ADFS authority 
    cert_validation_mode: ${18$$(yas-choose-value '("ignore" "validate"))} # choices: ignore;validate  Controls the certificate validation behavior for Azure endpoints  By default, all modules will
    auth_source: ${19$$(yas-choose-value '("auto" "cli" "credential_file" "env" "msi"))}# choices: auto;cli;credential_file;env;msi  Controls the source of the credentials to use for authentication
    api_profile: ${20:latest}                                              # Selects an API profile to use when communicating with Azure services  Default value of C(latest) is appropriate for publ
