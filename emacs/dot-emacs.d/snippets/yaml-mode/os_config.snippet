# -*- mode: snippet -*-
# name: Manage Extreme Networks NOS configuration sections
# prefix: nos_config_snippet
# key: os_config
# group: ansible
# --

- name: ${0:Manage Extreme Networks NOS configuration sections}
  nos_config:                                                              
    lines: ${1:value}                                                      # The ordered set of commands that should be configured in the section  The commands must be the exact same commands as fo
    parents: ${2:value}                                                    # The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against  If th
    src: ${3:value}                                                        # Specifies the source path to the file that contains the configuration or configuration template to load  The path to the
    before: ${4:value}                                                     # The ordered set of commands to push on to the command stack if a change needs to be made  This allows the playbook desig
    after: ${5:value}                                                      # The ordered set of commands to append to the end of the command stack if a change needs to be made  Just like with I(bef
    match: ${6$$(yas-choose-value '("line" "strict" "exact" "none"))}      # choices: line;strict;exact;none  Instructs the module on the way to perform the matching of the set of commands against 
    replace: ${7$$(yas-choose-value '("line" "block"))}                    # choices: line;block  Instructs the module on the way to perform the configuration on the device  If the replace argument
    multiline_delimiter: ${8:@}                                            # This argument is used when pushing a multiline configuration element to the NOS device  It specifies the character to us
    backup: ${9:false}                                                     # This argument will cause the module to create a full backup of the current C(running-config) from the remote device befo
    running_config: ${10:value}                                            # The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for c
    diff_against: ${11$$(yas-choose-value '("running" "intended"))}        # choices: running;intended  When using the C(ansible-playbook --diff) command line argument the module can generate diffs
    diff_ignore_lines: ${12:value}                                         # Use this argument to specify one or more lines that should be ignored during the diff  This is used for lines in the con
    intended_config: ${13:value}                                           # The C(intended_config) provides the master configuration that the node should conform to and is used to check the final 
    backup_options: ${14:value}                                            # This is a dict object containing configurable options related to backup file path  The value of this option is read only
