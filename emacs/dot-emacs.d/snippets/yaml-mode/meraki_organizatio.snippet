# -*- mode: snippet -*-
# name: Manage organizations in the Meraki cloud
# prefix: meraki_organization_snippet
# key: meraki_organizatio
# group: ansible
# --

- name: ${0:Manage organizations in the Meraki cloud}
  meraki_organization:                                                     
    auth_key: ${1:Authentication key provided by the dashboard}            # Required if environmental variable C(MERAKI_KEY) is not set 
    state: ${2$$(yas-choose-value '("present" "query"))}                   # choices: present;query  Create or modify an organization  C(org_id) must be specified if multiple organizations of the s
    clone: ${3:value}                                                      # Organization to clone to a new organization 
    org_name: ${4:value}                                                   # Name of organization  If C(clone) is specified, C(org_name) is the name of the new organization 
    org_id: ${5:value}                                                     # ID of organization 
    host: ${{6:api}                                                        #meraki com} # not required  Hostname for Meraki dashboard  Can be used to access regional Meraki environments, such as Ch
    use_proxy: ${7:value}                                                  # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts 
    use_https: ${8:True}                                                   # If C(no), it will use HTTP  Otherwise it will use HTTPS  Only useful for internal Meraki developers 
    output_format: ${9$$(yas-choose-value '("snakecase" "camelcase"))}     # choices: snakecase;camelcase  Instructs module whether response keys should be snake case (ex  C(net_id)) or camel case 
    output_level: ${10$$(yas-choose-value '("debug" "normal"))}            # choices: debug;normal  Set amount of debug output during module execution 
    timeout: ${11:30}                                                      # Time to timeout for HTTP requests 
    validate_certs: ${12:True}                                             # Whether to validate HTTP certificates 
    rate_limit_retry_time: ${13:165}                                       # Number of seconds to retry if rate limiter is triggered 
    internal_error_retry_time: ${14:60}                                    # Number of seconds to retry if server returns an internal server error 
