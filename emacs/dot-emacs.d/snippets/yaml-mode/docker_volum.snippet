# -*- mode: snippet -*-
# name: Manage Docker volumes
# prefix: docker_volume_snippet
# key: docker_volum
# group: ansible
# --

- name: ${0:Manage Docker volumes}
  docker_volume:                                                           
    volume_name: ${1:Name of the volume to operate on}                     #
    driver: ${2:local}                                                     # Specify the type of volume  Docker provides the C(local) driver, but 3rd party drivers can also be used 
    driver_options: ${3:value}                                             # Dictionary of volume settings  Consult docker docs for valid options and values: U(https://docs docker com/engine/refere
    labels: ${4:value}                                                     # Dictionary of label key/values to set for the volume
    force: ${5:False}                                                      # With state C(present) causes the volume to be deleted and recreated if the volume already exist and the driver, driver o
    recreate: ${6$$(yas-choose-value '("always" "never" "options-changed"))}# choices: always;never;options-changed  Controls when a volume will be recreated when I(state) is C(present)  Please not
    state: ${7$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  C(absent) deletes the volume  C(present) creates the volume, if it does not already exist 
    docker_host: ${{8:unix://var/run/docker}                               #sock} # not required  The URL or Unix socket path used to connect to the Docker API  To connect to a remote host, provide
    tls_hostname: ${9:localhost}                                           # When verifying the authenticity of the Docker Host server, provide the expected name of the server  If the value is not 
    api_version: ${10:auto}                                                # The version of the Docker API running on the Docker Host  Defaults to the latest version of the API supported by Docker 
    timeout: ${11:60}                                                      # The maximum amount of time in seconds to wait on a response from the API  If the value is not specified in the task, the
    ca_cert: ${12:value}                                                   # Use a CA certificate when performing server verification by providing the path to a CA certificate file  If the value is
    client_cert: ${13:value}                                               # Path to the client's TLS certificate file  If the value is not specified in the task and the environment variable C(DOCK
    client_key: ${14:value}                                                # Path to the client's TLS key file  If the value is not specified in the task and the environment variable C(DOCKER_CERT_
    ssl_version: ${15:value}                                               # Provide a valid SSL version number  Default value determined by ssl py module  If the value is not specified in the task
    tls: ${16:False}                                                       # Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server  Note that if
    validate_certs: ${17:False}                                            # Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server  If the value is 
    debug: ${18:False}                                                     # Debug mode
