# -*- mode: snippet -*-
# name: Manage Azure IoT hub
# prefix: azure_rm_iothub_snippet
# key: zure_rm_iothu
# group: ansible
# --

- name: ${0:Manage Azure IoT hub}
  azure_rm_iothub:                                                         
    resource_group: ${1:Name of resource group}                            #
    name: ${2:Name of the IoT hub}                                         #
    state: ${3$$(yas-choose-value '("absent" "present"))}                  # choices: absent;present  State of the IoT hub  Use C(present) to create or update an IoT hub and C(absent) to delete an 
    location: ${4:value}                                                   # Location of the IoT hub 
    sku: ${5$$(yas-choose-value '("b1" "b2" "b3" "f1" "s1" "s2" "s3"))}    # choices: b1;b2;b3;f1;s1;s2;s3  Pricing tier for Azure IoT Hub  Note that only one free IoT hub instance is allowed in ea
    unit: ${6:value}                                                       # Units in your IoT Hub  Default is C(1) 
    event_endpoint: ${7:value}                                             # The Event Hub-compatible endpoint property 
    enable_file_upload_notifications: ${8:value}                           # File upload notifications are enabled if set to C(True) 
    ip_filters: ${9:value}                                                 # Configure rules for rejecting or accepting traffic from specific IPv4 addresses 
    routing_endpoints: ${10:value}                                         # Custom endpoints 
    routes: ${11:value}                                                    # Route device-to-cloud messages to service-facing endpoints 
    ad_user: ${12:value}                                                   # Active Directory username  Use when authenticating with an Active Directory user rather than service principal 
    password: ${13:value}                                                  # Active Directory user password  Use when authenticating with an Active Directory user rather than service principal 
    profile: ${14:value}                                                   # Security profile found in ~/ azure/credentials file 
    subscription_id: ${15:value}                                           # Your Azure subscription Id 
    client_id: ${16:value}                                                 # Azure client ID  Use when authenticating with a Service Principal 
    secret: ${17:value}                                                    # Azure client secret  Use when authenticating with a Service Principal 
    tenant: ${18:value}                                                    # Azure tenant ID  Use when authenticating with a Service Principal 
    cloud_environment: ${19:AzureCloud}                                    # For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(Azure
    adfs_authority_url: ${20:value}                                        # Azure AD authority url  Use when authenticating with Username/password, and has your own ADFS authority 
    cert_validation_mode: ${21$$(yas-choose-value '("ignore" "validate"))} # choices: ignore;validate  Controls the certificate validation behavior for Azure endpoints  By default, all modules will
    auth_source: ${22$$(yas-choose-value '("auto" "cli" "credential_file" "env" "msi"))}# choices: auto;cli;credential_file;env;msi  Controls the source of the credentials to use for authentication
    api_profile: ${23:latest}                                              # Selects an API profile to use when communicating with Azure services  Default value of C(latest) is appropriate for publ
    tags: ${24:value}                                                      # Dictionary of string:string pairs to assign as metadata to the object  Metadata tags on the object will be updated with 
    append_tags: ${25:True}                                                # Use to control if tags field is canonical or just appends to existing tags  When canonical, any tags not found in the ta
